{"version":3,"file":"Index-0f08e76d.js","sources":["../../../resources/js/Components/InfoCardCliente.jsx","../../../resources/js/Pages/Catalogos/Index.jsx"],"sourcesContent":["import React from \"react\";\nimport { Button } from 'primereact/button';\n\nexport default function InfoCardCliente({ title, value, icon = '', iconColor = '', descriptionValue = '', descriptionText = '', clickOpt, valueTitle='', link='/' }) {\n    const iconClass = `pi pi-${icon} text-${iconColor}-500 text-xl`;\n    const iconBackgroundClass = `flex align-items-center justify-content-center bg-${iconColor}-100 border-round`;\n\n    return (\n        <div className=\"col-12 lg:col-6 xl:col-3\">\n            <div className=\"card mb-0\">\n                <div className=\"flex justify-content-between mb-3\">\n                    <div>\n                        <span className=\"block text-500 font-medium mb-3\">{title}</span>\n                        <div className=\"text-900 font-medium text-xl\">{value}</div>\n                    </div>\n                    <div className={iconBackgroundClass}\n                         style={{width: '2.5rem', height: '2.5rem'}}>\n                        <i className={iconClass} />\n                    </div>\n                </div>\n                <span className=\"text-green-500 font-medium\">{ descriptionValue}</span>\n                <span className=\"text-500\"> {descriptionText}</span>\n                <div className=\"mt-3 flex flex-column align-items-center\">\n                    <a href={link} rel=\"noopener noreferrer\" className=\"p-button\">{valueTitle}</a>\n                </div>\n            </div>\n        </div>\n    );\n}\n","import DashboardInfoCard from '@/Components/DashboardInfoCard';\nimport Layout from '@/Layouts/layout/layout';\nimport React, { Component, useState, useEffect, useRef } from 'react';\nimport DialogoCat from './Partials/DialogoCat';\nimport InfoCardCliente from '@/Components/InfoCardCliente';\nimport axios from \"axios\";\nimport { Toast } from 'primereact/toast';\nimport { InputText } from 'primereact/inputtext';\n\nimport { ProgressSpinner } from 'primereact/progressspinner';\n        \n\n\n\nconst Index = (props) =>{\n    const toast = useRef(null);\n    const [loading,setLoading] = useState(false);\n    const [catalogo, setCatalogo] = useState(null)\n    const [totalCatCliente, setTotalCatCliente] = useState(0)\n    const [totalCatDepartamento, setTotalCatDepartamento] = useState(0)\n    const [totalCatEmpresa, setTotalCatEmpresa] = useState(0)\n    const [totalCatEstatu, setTotalCatEstatu] = useState(0)\n    const [totalCatMoneda, setTotalCatMoneda] = useState(0)\n    const [totalCatPrioridad, setTotalCatPrioridad] = useState(0)\n    const [totalCatProvedor, setTotalCatProvedor] = useState(0)\n    const [totalCatTipoServicio, setTotalCatTipoServicio] = useState(0)\n    const [totalCatUnidadMedida, setTotalCatUnidadMedida] = useState(0)\n    const [totalCotizacion, setTotalCotizacion] = useState(0)\n    const [totalUser, setTotalUser] = useState(0)\n\n    \n    const resumenCatalogos = async () =>{\n        setLoading(true)\n        try {\n            setTimeout( async() => {\n                const response = await axios.get(route(\"catalogo.resumen.catalogos.asc\"));        \n                // console.log(\"Este es el detalle\", response);\n                \n                const {data,status }= response\n                if(status === 200){\n                    \n                    setTotalCatCliente(data.CatCliente);\n                    setTotalCatDepartamento(data.CatDepartamento);\n                    setTotalCatEmpresa(data.CatEmpresa);\n                    setTotalCatEstatu(data.CatEstatu);\n                    setTotalCatMoneda(data.CatMoneda);\n                    setTotalCatPrioridad(data.CatPrioridad);\n                    setTotalCatProvedor(data.CatProvedor);\n                    setTotalCatTipoServicio(data.CatTipoServicio);\n                    setTotalCatUnidadMedida(data.CatUnidadMedida);\n                    setTotalCotizacion(data.Cotizacion);\n                    setTotalUser(data.User);\n                }              \n                setLoading(false)\n            }, 800);            \n            \n        } catch (error) {\n            setLoading(false)\n            console.error(error);\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"No se logro obtener el resumen de estadisticos\",\n                life: 3000,\n            });\n        }\n    }\n\n    useEffect(()=>{\n        resumenCatalogos()\n    },[])\n    \n    \n    \n    return (\n\n        <Layout>\n            {loading && (\n                <div className=\"flex justify-content-center\">\n                    <ProgressSpinner />\n                </div>\n            )}\n            {loading=== false &&(\n            <div className=\"grid\">\n                    <>\n                    {/* <DashboardInfoCard \n                        title=\"Provedores\"\n                        valueTitle='provedores'\n                        value={totalCatProvedor+' Registros'}\n                        icon=\"tags\"\n                        iconColor=\"purple\"    \n                        clickOpt = {setCatalogo}               \n                    /> */}\n                    {/* <DashboardInfoCard \n                        title=\"Departamentos\"\n                        valueTitle='departamentos'\n                        value={totalCatDepartamento+' Registros'}\n                        icon=\"tags\"\n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}/> */}\n                    \n                    <InfoCardCliente\n                        title=\"Clientes\" \n                        valueTitle='clientes'\n                        value={totalCatCliente+' Registros'}\n                        icon=\"tags\" \n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}\n                        link={route('catalogo.clientes.asociados.index')}\n                    />\n                    \n                    <DashboardInfoCard \n                        title=\"Unidades de medida\"                     \n                        valueTitle='unidadesMedidas'\n                        value={totalCatUnidadMedida+' Registros'}\n                        icon=\"tags\"\n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}/>\n    \n                    <DashboardInfoCard \n                        title=\"Tipos de Monedas\"                     \n                        valueTitle='tiposMonedas'\n                        value={totalCatMoneda+' Registros'}\n                        icon=\"tags\"\n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}/>\n                        \n                    <DashboardInfoCard \n                        title=\"Tipos de Status\"                     \n                        valueTitle='tiposStatus'\n                        value={totalCatEstatu+' Registros'}\n                        icon=\"tags\"\n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}/>\n    \n                    {/* <DashboardInfoCard \n                        title=\"Usuarios\" \n                        valueTitle='usuarios'\n                        value={totalUser+' Registros'}\n                        icon=\"tags\"\n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}/>    */}\n\n                    <InfoCardCliente\n                        title=\"Usuarios\" \n                        valueTitle='usuarios'\n                        value={totalUser+' Registros'}\n                        icon=\"tags\" \n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}\n                        link={route('catalogos.detalle.usuarios')}\n                    />                                 \n                     <InfoCardCliente\n                        title=\"Dato Empresa\" \n                        valueTitle='Empresa'\n                        value={'1 Registros'}\n                        icon=\"tags\" \n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}\n                        link={route('catalogos.empresa.detalle.base')}\n                    />  \n                    {/* <DashboardInfoCard \n                        title=\"Datos de la empresa\" \n                        valueTitle='datosEmpresa'\n                        icon=\"tags\"\n                        iconColor=\"purple\"\n                        clickOpt = {setCatalogo}/> */}\n                    </>\n                <DialogoCat tpOperacion={catalogo} setOperacion={setCatalogo}/>\n                \n            </div>\n             )}    \n\n            <div className=\"flex justify-content-center\">\n                <Toast ref={toast} />\n            </div>\n        </Layout>\n    );\n    \n}\n\nexport default Index;"],"names":["InfoCardCliente","title","value","icon","iconColor","descriptionValue","descriptionText","clickOpt","valueTitle","link","iconClass","iconBackgroundClass","jsxs","jsx","Index","props","toast","useRef","loading","setLoading","useState","catalogo","setCatalogo","totalCatCliente","setTotalCatCliente","totalCatDepartamento","setTotalCatDepartamento","totalCatEmpresa","setTotalCatEmpresa","totalCatEstatu","setTotalCatEstatu","totalCatMoneda","setTotalCatMoneda","totalCatPrioridad","setTotalCatPrioridad","totalCatProvedor","setTotalCatProvedor","totalCatTipoServicio","setTotalCatTipoServicio","totalCatUnidadMedida","setTotalCatUnidadMedida","totalCotizacion","setTotalCotizacion","totalUser","setTotalUser","resumenCatalogos","response","axios","data","status","error","useEffect","Layout","ProgressSpinner","Fragment","DashboardInfoCard","DialogoCat","Toast"],"mappings":"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"}