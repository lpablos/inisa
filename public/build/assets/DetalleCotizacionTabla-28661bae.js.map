{"version":3,"file":"DetalleCotizacionTabla-28661bae.js","sources":["../../../node_modules/primereact/toolbar/toolbar.esm.js","../../../resources/js/Pages/Cotizaciones/partials/DetalleCotizacionTabla.jsx"],"sourcesContent":["'use client';\nimport * as React from 'react';\nimport { PrimeReactContext } from 'primereact/api';\nimport { ComponentBase, useHandleStyle } from 'primereact/componentbase';\nimport { useMergeProps } from 'primereact/hooks';\nimport { ObjectUtils, classNames } from 'primereact/utils';\n\nvar ToolbarBase = ComponentBase.extend({\n  defaultProps: {\n    __TYPE: 'Toolbar',\n    id: null,\n    style: null,\n    className: null,\n    left: null,\n    right: null,\n    start: null,\n    center: null,\n    end: null,\n    children: undefined\n  },\n  css: {\n    classes: {\n      root: 'p-toolbar p-component',\n      start: 'p-toolbar-group-start p-toolbar-group-left',\n      center: 'p-toolbar-group-center',\n      end: 'p-toolbar-group-end p-toolbar-group-right'\n    },\n    styles: \"\\n        @layer primereact {\\n            .p-toolbar {\\n                display: flex;\\n                align-items: center;\\n                justify-content: space-between;\\n                flex-wrap: wrap;\\n            }\\n            \\n            .p-toolbar-group-start,\\n            .p-toolbar-group-center,\\n            .p-toolbar-group-end {\\n                display: flex;\\n                align-items: center;\\n            }\\n            \\n            .p-toolbar-group-left,\\n            .p-toolbar-group-right {\\n                display: flex;\\n                align-items: center;\\n            }\\n        }\\n        \"\n  }\n});\n\nvar Toolbar = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(function (inProps, ref) {\n  var mergeProps = useMergeProps();\n  var context = React.useContext(PrimeReactContext);\n  var props = ToolbarBase.getProps(inProps, context);\n  var elementRef = React.useRef(null);\n  var start = ObjectUtils.getJSXElement(props.left || props.start, props);\n  var center = ObjectUtils.getJSXElement(props.center, props);\n  var end = ObjectUtils.getJSXElement(props.right || props.end, props);\n  var _ToolbarBase$setMetaD = ToolbarBase.setMetaData({\n      props: props\n    }),\n    ptm = _ToolbarBase$setMetaD.ptm,\n    cx = _ToolbarBase$setMetaD.cx,\n    isUnstyled = _ToolbarBase$setMetaD.isUnstyled;\n  useHandleStyle(ToolbarBase.css.styles, isUnstyled, {\n    name: 'toolbar'\n  });\n  React.useImperativeHandle(ref, function () {\n    return {\n      props: props,\n      getElement: function getElement() {\n        return elementRef.current;\n      }\n    };\n  });\n  var startProps = mergeProps({\n    className: cx('start')\n  }, ptm('start'));\n  var centerProps = mergeProps({\n    className: cx('center')\n  }, ptm('center'));\n  var endProps = mergeProps({\n    className: cx('end')\n  }, ptm('end'));\n  var rootProps = mergeProps({\n    id: props.id,\n    ref: elementRef,\n    style: props.style,\n    className: classNames(props.className, cx('root')),\n    role: 'toolbar'\n  }, ToolbarBase.getOtherProps(props), ptm('root'));\n  return /*#__PURE__*/React.createElement(\"div\", rootProps, /*#__PURE__*/React.createElement(\"div\", startProps, start), /*#__PURE__*/React.createElement(\"div\", centerProps, center), /*#__PURE__*/React.createElement(\"div\", endProps, end));\n}));\nToolbar.displayName = 'Toolbar';\n\nexport { Toolbar };\n","import React, { Component, useEffect, useState, useRef } from 'react';\nimport { Button } from 'primereact/button';\nimport DialogDetalleCotizacion from './DialogDetalleCotizacion';\nimport { ConfirmDialog, confirmDialog } from 'primereact/confirmdialog';\nimport { Toast } from 'primereact/toast';\nimport { Toolbar } from 'primereact/toolbar';\nimport { SplitButton } from 'primereact/splitbutton';\nimport DOMPurify from \"dompurify\";\n\nimport { ProgressSpinner } from 'primereact/progressspinner';\n        \n\nconst tableStyles = {\n    width: '100%',\n    borderCollapse: 'collapse',\n};\n\nconst cellStyles = {\n    border: '1px solid #ddd',\n    padding: '8px',\n    textAlign: 'center',\n    verticalAlign: 'middle',\n};\n\nconst headerStyles = {\n    ...cellStyles,\n    backgroundColor: '#f2f2f2',\n    fontWeight: 'bold',\n};\n\nconst yellowRowStyles = {\n    backgroundColor: '#fffbeb',\n};\n\nconst  DetalleCotizacionTabla = ({cotizacion, detalle, reloadList, onRecargaCompleta}) =>  {\n    \n    \n    const toast = useRef(null);\n    const [detalleCotizacion, setDetalleCotizacion] = useState([]);\n    const [loadingImg, setLoadingImg] = useState(false);\n\n    useEffect(async()=>{\n        async function fetchData() {\n            getListadoDetalleCotizacionFactura();\n        }\n        fetchData()\n    },[])\n\n    useEffect(()=>{\n        if(reloadList){\n            async function fetchData2() {\n                getListadoDetalleCotizacionFactura();\n                onRecargaCompleta()\n            }\n            fetchData2()\n           \n        }\n    },[reloadList])\n\n\n\n    const getListadoDetalleCotizacionFactura = async() =>{\n        setLoadingImg(true)\n        await axios\n        .get(`${route(\"cotizacion.list.detalle.cotizacion\", { identy: cotizacion })}`)\n        .then((response) => {\n            const {data, status } = response       \n            if(status == 200){   \n                setTimeout(() => {\n                    setDetalleCotizacion(data)\n                    setLoadingImg(false)    \n                }, 1000);     \n            }\n        });\n    }\n\n    const [DetalleModal, setDetalleModal] = useState()\n    const [showModalAccion, setShowModalAccion] = useState(false)\n    const modalUpdate = (detalle) =>{        \n        setDetalleModal(detalle);\n        setShowModalAccion(true)       \n    }\n\n  \n    const recargarListado = () =>{        \n        getListadoDetalleCotizacionFactura()\n    }\n\n    const preguntaEliminacion = (item) => {\n        let valor= item.PDA.replace(/<[^>]*>/g, '');\n        let sinEtiquetasDesc = item.descripcion.replace(/<[^>]*>/g, '');\n        let mensaje\n        if(item.es_tomo == 1){\n            mensaje = `Al eliminar el tomo con el PDA \"${valor}\", ten en cuenta que se se eliminar치n autom치ticamente todos los elementos internos relacionados (por ejemplo, 1.01, 1.02, entre otros).`\n        }else{\n            mensaje = `Se eliminar el PDA \"${valor}\", con la descripci칩n: ${sinEtiquetasDesc}.`\n        }\n        confirmDialog({\n            message: `${mensaje}`,\n            header: `Confirmacion de eliminaci칩n`,\n            icon: 'pi pi-info-circle',\n            defaultFocus: 'reject',\n            acceptClassName: 'p-button-danger',\n            accept: ()=>acceptDeleteDetalle(item.id),\n            reject\n        });\n    };\n\n    const acceptDeleteDetalle = async (identy) => {\n   \n        try {\n            await axios.delete(\n                `${route(\"tomo.detalle.elimina.identy\", { id: identy })}`\n            );\n            toast.current.show({\n                severity: \"success\",\n                summary: \"Eliminado correctamente\",\n                detail: \"El detalle fue eliminado exitosamente.\",\n                life: 3000,\n            });\n            setTimeout(() => {\n                getListadoDetalleCotizacionFactura();\n                onRecargaCompleta()\n            }, 1000);\n            \n        } catch (error) {\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"No se pudo eliminar el detalle.\",\n                life: 3000,\n            });\n        }\n        \n        \n    }\n\n    const reject = () => {\n        toast.current.show({ severity: 'contrast', summary: 'Correcto', detail: 'Intenta con otro elemento de la lista', life: 3000 });\n    }\n\n    const [totalDetalle, setTotalDetalle] = useState(0);\n\n   \n    useEffect(()=>{\n        if (Array.isArray(detalleCotizacion) && detalle.es_material == 1) {\n            calcularTotalMaterial()\n        }\n\n        if (Array.isArray(detalleCotizacion) && detalle.es_mano_obra == 1) {\n            calcularTotalManoObra()\n        }        \n    },[detalleCotizacion])\n\n    const calcularTotalMaterial = () => {\n        const sumaMaterial = detalleCotizacion\n                .filter(item => item.es_tomo === 0)\n                .reduce((acc, item) => acc + (item.costo_material_subtotal || 0), 0);  \n        setTotalDetalle(sumaMaterial);        \n    };\n\n    const calcularTotalManoObra = () => {\n        const sumaMaterial = detalleCotizacion\n                .filter(item => item.es_tomo === 0)\n                .reduce((acc, item) => acc + (item.obra_material_subtotal || 0), 0);  \n        setTotalDetalle(sumaMaterial);        \n    };\n\n    const formatCurrency = (value) => {\n        return `$${parseFloat(value).toFixed(2)}`;\n    };\n\n   \n    const endContent = (\n        <React.Fragment>\n            Total : { `${formatCurrency(totalDetalle).toLocaleString()} ${detalle.moneda.abreviacion} `}\n        </React.Fragment>\n    );\n\n    function stripTags(html) {\n        const temporalElement = document.createElement(\"div\");\n        temporalElement.innerHTML = html;\n        return temporalElement.textContent || temporalElement.innerText || \"\";\n    }\n    \n    return (\n        \n        <div className=\"card\">\n            {loadingImg && (\n                <div className=\"card flex justify-content-center\">\n                    <ProgressSpinner />\n                </div>\n            )}\n             <Toast ref={toast} />\n             <ConfirmDialog />\n             {loadingImg == false && (\n                <table style={tableStyles}>\n                    <thead>\n                        {detalle.es_material==1 && (\n                            <tr>\n                                <th style={headerStyles}>PDA</th>\n                                <th style={headerStyles}>Descripcion</th>\n                                <th style={headerStyles}>Material Unidad</th>\n                                <th style={headerStyles}>Materia Cantidad</th>\n                                <th style={headerStyles}>Material Subtotal </th>\n                                <th style={headerStyles}>Opciones</th>\n                            </tr>\n                        )}\n                        {detalle.es_mano_obra==1 &&(\n                            <tr>\n                            <th style={headerStyles}>PDA</th>\n                            <th style={headerStyles}>Descripcion</th>\n                            <th style={headerStyles}>Material Unidad</th>\n                            <th style={headerStyles}>Materia Cantidad</th>\n                            <th style={headerStyles}>Material Subtotal</th>\n                            <th style={headerStyles}>Mano Obra Costo Unitario</th>\n                            <th style={headerStyles}>Mano Obra Subtotal</th>\n                            <th style={headerStyles}>Material/Mano Obra Subtotal</th>\n                            <th style={headerStyles}>Opciones</th>\n                        </tr>\n                        )}\n                    \n                    </thead>\n                    {detalle.es_material==1 && (\n                        <tbody>\n                            {detalleCotizacion.map((item)=>(\n                                item.es_tomo ===1 ? (                            \n                                    <tr key={item.id} style={yellowRowStyles}>\n                                        <td style={cellStyles}>{item.PDA}</td>\n                                        <td colSpan={4} style={cellStyles}> <h6>{item.descripcion} </h6></td>\n                                        <td style={cellStyles}>\n                                            <Button icon=\"pi pi-refresh\" tooltip=\"Actualizar\" tooltipOptions={{ showDelay: 100, hideDelay: 300 }} rounded text severity=\"help\" aria-label=\"Actualizar\" onClick={()=>{modalUpdate(item)}} />\n                                            <Button icon=\"pi pi-times\" tooltip=\"Eliminar\" tooltipOptions={{ showDelay: 100, hideDelay: 300 }} rounded text severity=\"danger\" aria-label=\"Eliminar\" onClick={()=>{preguntaEliminacion(item)}}/>\n                                        </td>\n                                    </tr>\n                                ):(\n                                    <tr key={item.id}>\n                                        <td style={cellStyles}>{item.PDA}</td>\n                                        <td\n                                            style={cellStyles}\n                                            dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(item.descripcion) }}\n                                        ></td>\n                                        <td style={cellStyles}>{item.costo_material_cantidad}</td>\n                                        <td style={cellStyles}>{formatCurrency(item.costo_material_unitario)} {detalle?.moneda?.abreviacion || \"\"}</td>\n                                        <td style={cellStyles}>{formatCurrency(item.costo_material_subtotal)} {detalle?.moneda?.abreviacion || \"\"}</td>\n                                        <td style={cellStyles}>                                    \n                                            <Button icon=\"pi pi-refresh\" tooltip=\"Actualizar\" tooltipOptions={{ showDelay: 100, hideDelay: 300 }} rounded text severity=\"help\" aria-label=\"Actualizar\" onClick={()=>{modalUpdate(item)}} />\n                                            <Button icon=\"pi pi-times\" tooltip=\"Eliminar\" tooltipOptions={{ showDelay: 100, hideDelay: 300 }} rounded text severity=\"danger\" aria-label=\"Eliminar\" onClick={()=>{preguntaEliminacion(item)}}/>\n                                        </td>\n                                    </tr>\n                                )  \n                            ))}\n                        </tbody>      \n                    )}\n                    {detalle.es_mano_obra==1 &&(\n                        <tbody>\n                            {detalleCotizacion.map((item)=>(\n                                item.es_tomo ===1 ? (                            \n                                    <tr key={item.id} style={yellowRowStyles}>\n                                        <td style={cellStyles}>{item.PDA}</td>\n                                        <td colSpan={7} style={cellStyles}> <h6>{item.descripcion}</h6></td>\n                                        <td style={cellStyles}>\n                                            <Button icon=\"pi pi-refresh\" tooltip=\"Actualizar\" tooltipOptions={{ showDelay: 100, hideDelay: 300 }} rounded text severity=\"help\" aria-label=\"Actualizar\" onClick={()=>{modalUpdate(item)}} />\n                                            <Button icon=\"pi pi-times\" tooltip=\"Eliminar\" tooltipOptions={{ showDelay: 100, hideDelay: 300 }} rounded text severity=\"danger\" aria-label=\"Eliminar\" onClick={()=>{preguntaEliminacion(item)}}/>\n                                        </td>\n                                    </tr>\n                                ):(\n                                    <tr key={item.id}>\n                                        <td style={cellStyles}>{item.PDA}</td>\n                                        <td\n                                            style={cellStyles}\n                                            dangerouslySetInnerHTML={{ __html: DOMPurify.sanitize(item.descripcion) }}\n                                        ></td>\n                                        <td style={cellStyles}>{item.costo_material_cantidad}</td>\n                                        <td style={cellStyles}>{(item.costo_material_unitario)?`${formatCurrency(item.costo_material_unitario)} ${detalle?.moneda?.abreviacion || \"\"}`:'--'}</td>\n                                        <td style={cellStyles}>{(item.costo_material_subtotal)? `${formatCurrency(item.costo_material_subtotal)} ${detalle?.moneda?.abreviacion || \"\"}`: '--'}</td>\n                                        <td style={cellStyles}>{(item.costo_mano_obra_unitario)? `${formatCurrency(item.costo_mano_obra_unitario)} ${detalle?.moneda?.abreviacion || \"\"}`: '--'}</td>\n                                        <td style={cellStyles}>{(item.costo_mano_obra_subtotal)?`${formatCurrency(item.costo_mano_obra_subtotal)} ${detalle?.moneda?.abreviacion || \"\"}`: '--'}</td>\n                                        <td style={cellStyles}>{(item.obra_material_subtotal)? `${formatCurrency(item.obra_material_subtotal)} ${detalle?.moneda?.abreviacion || \"\"}`: '--'}</td>\n                                        <td style={cellStyles}>                                            \n                                            <Button icon=\"pi pi-refresh\" tooltip=\"Actualizar\" tooltipOptions={{ showDelay: 100, hideDelay: 300 }} rounded text severity=\"help\" aria-label=\"Actualizar\" onClick={()=>{modalUpdate(item)}} />\n                                            <Button icon=\"pi pi-times\" tooltip=\"Eliminar\" tooltipOptions={{ showDelay: 100, hideDelay: 300 }} rounded text severity=\"danger\" aria-label=\"Eliminar\" onClick={()=>{preguntaEliminacion(item)}}/>\n                                        </td>\n                                    </tr>\n                                )  \n                            ))}\n                        </tbody>\n                    )}\n                </table>\n             )}\n            {/* Total {totalDetalle} */}\n            \n            <Toolbar end={endContent} />\n            \n            <DialogDetalleCotizacion \n                cotizacion={cotizacion} \n                detalleItem={detalle}\n                // para el detalle\n                detalle={DetalleModal} \n                showModalAccion={showModalAccion} \n                showbtn={false}\n                eventoVisible={setShowModalAccion}\n                recargarListado={recargarListado}\n            />\n        </div>\n    );\n    \n}\n\nexport default DetalleCotizacionTabla;"],"names":["ToolbarBase","ComponentBase","Toolbar","React.memo","React.forwardRef","inProps","ref","mergeProps","useMergeProps","context","React.useContext","PrimeReactContext","props","elementRef","React.useRef","start","ObjectUtils","center","end","_ToolbarBase$setMetaD","ptm","cx","isUnstyled","useHandleStyle","React.useImperativeHandle","startProps","centerProps","endProps","rootProps","classNames","React.createElement","tableStyles","cellStyles","headerStyles","yellowRowStyles","DetalleCotizacionTabla","cotizacion","detalle","reloadList","onRecargaCompleta","toast","useRef","detalleCotizacion","setDetalleCotizacion","useState","loadingImg","setLoadingImg","useEffect","fetchData","getListadoDetalleCotizacionFactura","fetchData2","response","data","status","DetalleModal","setDetalleModal","showModalAccion","setShowModalAccion","modalUpdate","recargarListado","preguntaEliminacion","item","valor","sinEtiquetasDesc","mensaje","confirmDialog","acceptDeleteDetalle","reject","identy","totalDetalle","setTotalDetalle","calcularTotalMaterial","calcularTotalManoObra","sumaMaterial","acc","formatCurrency","value","endContent","jsxs","React","jsx","ProgressSpinner","Toast","ConfirmDialog","Button","DOMPurify","_a","_b","_c","_d","_e","DialogDetalleCotizacion"],"mappings":"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","x_google_ignoreList":[0]}