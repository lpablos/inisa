{"version":3,"file":"Dialogo-404ea213.js","sources":["../../../resources/js/Pages/LogsActividades/partials/Dialogo.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Button } from \"primereact/button\";\nimport { Dialog } from \"primereact/dialog\";\nimport { InputText } from \"primereact/inputtext\";\nimport { FloatLabel } from \"primereact/floatlabel\";\nimport { Calendar } from \"primereact/calendar\";\nimport DropdownFilter from \"./SelectorFilter\";\nimport { Toast } from \"primereact/toast\";\nimport axios from \"axios\";\nimport { ConfirmDialog, confirmDialog } from \"primereact/confirmdialog\";\nimport { set } from \"react-hook-form\";\nimport { RadioButton } from \"primereact/radiobutton\";\nimport \"primereact/resources/themes/saga-blue/theme.css\";\nimport \"primereact/resources/primereact.min.css\";\nimport \"primeicons/primeicons.css\";\n\nimport { Divider } from 'primereact/divider';\n\nimport { Fieldset } from 'primereact/fieldset';\n        \n        \n\nimport { ToggleButton } from 'primereact/togglebutton';\nimport { SelectButton } from 'primereact/selectbutton';\n        \n\nconst Dialogo = ({ isEdit, dataToEdit, onSave, onUpdate, onClose }) => {\n    const [visible, setVisible] = useState(true);\n    const [selectedProveedor, setSelectedProveedor] = useState(null);\n    const [titulo, setTitulo] = useState(\"\");\n    const [proveedores, setProveedores] = useState([]);\n    const [date, setDate] = useState(new Date());\n    const [fecha_inicio_cotizacion, setFecha_inicio_cotizacion] =useState(null);\n    const [fecha_final_cotizacion, setFecha_final_cotizacion] = useState(null);\n    const toast = useRef(null);\n    const [tipo, setTipo] = useState('material'); // 'material' o 'mano_obra'\n    \n    \n    const options = ['Material', 'Material y Mano de Obra'];\n    const [value, setValue] = useState(options[0]);\n    useEffect(()=>{\n        if(value=='Material'){\n            setTipo('material')\n        }\n        if(value=='Material y Mano de Obra'){\n            setTipo('mano_obra')\n        }\n    },[value])\n\n    useEffect(()=>{\n        if(tipo == 'material'){\n            setValue(options[0]);\n        }else{\n            setValue(options[1]);\n        }\n    },[tipo])\n    \n    \n    \n    const [selectedCliente, setSelectedCliente] = useState(null); // Status seleccionado\n    const [cliente, setCliente] = useState([]); // Lista de statuses\n    const [ingredient, setIngredient] = useState(\"\");\n\n    const handleChange = (e) => {\n        setTipo(e.value);\n    };\n\n    useEffect(() => {\n        const obtenerClientes = async () => {\n            try {\n                const response = await axios.get(\n                    route(\"catalogo.list.clientes\")\n                );\n                setCliente(response.data);\n            } catch (error) {\n                toast.current.show({\n                    severity: \"error\",\n                    summary: \"Error\",\n                    detail: \"No se pudo obtener la lista de clientes.\",\n                    life: 3000,\n                });\n            }\n        };\n        obtenerClientes();\n    }, []);\n\n    const [selectedMoneda, setSelectedMoneda] = useState({\n        \"id\": 3,\n        \"nombre\": \"Peso Mexicano\",\n        \"abreviacion\": \"MXN\",\n        \"created_at\": \"2025-01-08T07:50:51.000000Z\",\n        \"updated_at\": \"2025-01-08T07:50:51.000000Z\"\n    }); // Status seleccionado\n    \n    \n    \n    const [moneda, setMoneda] = useState([]); // Lista de statuses\n\n    useEffect(() => {\n        const obtenerMonedas = async () => {\n            try {\n                const response = await axios.get(\n                    route(\"catalogo.list.tiposmonedas\")\n                );\n                setMoneda(response.data);\n            } catch (error) {\n                toast.current.show({\n                    severity: \"error\",\n                    summary: \"Error\",\n                    detail: \"No se pudo obtener la lista de monedas.\",\n                    life: 3000,\n                });\n            }\n        };\n        obtenerMonedas();\n    }, []);\n\n    const [selectedPrioridad, setSelectedPrioridad] = useState({\n        \"id\": 2,\n        \"nombre\": \"Media\",\n        \"descripcion\": \"Prioridad Media\",\n        \"created_at\": \"2025-01-08T07:50:49.000000Z\",\n        \"updated_at\": \"2025-01-08T07:50:49.000000Z\"\n    }); // Status seleccionado\n    const [prioridad, setPrioridad] = useState([]); // Lista de statuses\n\n    useEffect(() => {\n        const obtenerPrioridad = async () => {\n            try {\n                const response = await axios.get(\n                    route(\"catalogo.list.prioridades\")\n                );\n                setPrioridad(response.data);\n            } catch (error) {\n                toast.current.show({\n                    severity: \"error\",\n                    summary: \"Error\",\n                    detail: \"No se pudo obtener la lista de prioridades.\",\n                    life: 3000,\n                });\n            }\n        };\n        obtenerPrioridad();\n    }, []);\n\n    const [selectedStatus, setSelectedStatus] = useState(null); // Status seleccionado\n    \n    const [statuses, setStatuses] = useState([]); // Lista de statuses\n    useEffect(() => {\n        const obtenerStatuses = async () => {\n            try {\n                const response = await axios.get(route(\"catalogo.list.status\"));\n                \n                \n                setStatuses(response.data);\n            } catch (error) {\n                toast.current.show({\n                    severity: \"error\",\n                    summary: \"Error\",\n                    detail: \"No se pudo obtener la lista de statuses.\",\n                    life: 3000,\n                });\n            }\n        };\n        obtenerStatuses();\n    }, []);\n\n    // Obtener la lista de proveedores\n    useEffect(() => {\n        const obtenerProveedores = async () => {\n            try {\n                const response = await axios.get(\n                    route(\"catalogo.list.provedores\")\n                );\n                setProveedores(response.data);\n            } catch (error) {\n                toast.current.show({\n                    severity: \"error\",\n                    summary: \"Error\",\n                    detail: \"No se pudo obtener la lista de proveedores.\",\n                    life: 3000,\n                });\n            }\n        };\n        obtenerProveedores();\n    }, []);\n\n    // Cargar datos en caso de edición\n    useEffect(() => {\n        if (isEdit && dataToEdit) {\n            setTitulo(dataToEdit.titulo || \"\");\n            setDate(new Date(dataToEdit.fecha) || null);\n            setFecha_final_cotizacion(new Date(dataToEdit.fecha_cotiza_fin) || null);\n            setFecha_inicio_cotizacion(new Date(dataToEdit.fecha_cotiza_inicio) || null);\n\n            setTipo(dataToEdit.es_material || \"\");\n            let es_mano_obra\n            if (dataToEdit.es_mano_obra == 1) {\n                es_mano_obra = \"mano_obra\"\n            } else {\n                es_mano_obra = \"material\"\n            }\n            setTipo(es_mano_obra);\n            setIngredient(dataToEdit.ingredient || \"\");\n\n\n            const proveedorEncontrado = proveedores.find(\n                (p) => p.id === dataToEdit.provedor_id\n            );\n            setSelectedProveedor(proveedorEncontrado || null);\n\n            // Cargar el status seleccionado\n            const statusEncontrado = statuses.find(\n                (s) => s.id === dataToEdit.status_id\n            );\n            setSelectedStatus(statusEncontrado || null);\n\n            const monedaEncontrada = moneda.find(\n                (m) => m.id === dataToEdit.cat_moneda_id\n            );\n            setSelectedMoneda(monedaEncontrada || null);\n\n            const clienteEncontrado = cliente.find(\n                (m) => m.id === dataToEdit.cliente_id\n            );\n            setSelectedCliente(clienteEncontrado || null);\n\n            const prioridadEncontrada = prioridad.find(\n                (m) => m.id === dataToEdit.cat_prioridad_id\n            );\n            setSelectedPrioridad(prioridadEncontrada || null);\n        }\n    }, [isEdit, dataToEdit, proveedores]);\n\n    // Manejar el guardado\n    const handleGuardar = async () => {\n        if (\n\n            !titulo ||\n            !date ||\n            !selectedStatus ||\n            !selectedMoneda ||\n            !selectedCliente ||\n            !selectedPrioridad ||\n            !fecha_inicio_cotizacion ||\n            !fecha_final_cotizacion\n        ) {\n            toast.current.show({\n                severity: \"warn\",\n                summary: \"Campos incompletos\",\n                detail: \"Todos los campos son obligatorios.\",\n                life: 3000,\n            });\n            return;\n        }\n\n        const datos = {\n            // provedor_id: selectedProveedor.id,\n            status_id: selectedStatus.id,\n            moneda_id: selectedMoneda.id,\n            cliente_id: selectedCliente.id,\n            prioridad_id: selectedPrioridad.id,\n            titulo: titulo,\n            fecha: date,\n            fecha_inicio_cotizacion: fecha_inicio_cotizacion,\n            fecha_final_cotizacion: fecha_final_cotizacion,\n            es_material: tipo,\n        };\n\n        const confirmMessage = isEdit\n        ? \"¿Está seguro de que desea actualizar esta cotización?\"\n        : \"¿Está seguro de que desea crear esta cotización?\";\n\n        confirmDialog({\n            message: confirmMessage,\n            header: isEdit ? \"Confirmar Actualización\" : \"Confirmar Creación\",\n            icon: \"pi pi-exclamation-triangle\",\n            accept: async () => {\n                try {\n                    if (isEdit) {\n                        const response = await axios.put(\n                            route(\"cotizacion.actualiza.cotizacion\", {\n                                id: dataToEdit.id,\n                            }),\n                            datos\n                        );\n                        if (response.status === 200) {\n                            toast.current.show({\n                                severity: \"success\",\n                                summary: \"Éxito\",\n                                detail: \"Cotización actualizada correctamente.\",\n                                life: 3000,\n                            });\n                            onUpdate();\n                        }\n                    } else {\n                        const response = await axios.post(\n                            route(\"cotizacion.registrar.cotizacion\"),\n                            datos\n                        );\n\n                        console.log(\"Esto devuelve ---->=>\",response);\n                        const {folio} = response.data.data\n                        if (response.status === 201) {\n                            console.log(\"Este es el dato \", folio);\n                            toast.current.show({\n                                severity: \"info\",\n                                summary: \"Cotizacion Registrada\",\n                                detail: \"Cotizacion con Folio '\"+folio+'\"',\n                                life: 5000,\n                            });\n                        \n                            onSave();\n                        }\n                    }\n                    setVisible(false);\n                    onClose();\n                } catch (error) {\n                    toast.current.show({\n                        severity: \"error\",\n                        summary: \"Error inesperado\",\n                        detail: \"No se pudo procesar la solicitud.\",\n                        life: 3000,\n                    });\n                }\n            },\n            reject: () => {\n                toast.current.show({\n                    severity: \"info\",\n                    summary: \"Acción cancelada\",\n                    detail: \"No se realizó ningún cambio.\",\n                    life: 3000,\n                });\n            },\n        });\n    };\n\n    useEffect(()=>{\n        setTimeout(() => {\n            setSelectedStatus({\n                \"id\": 3,\n                \"nombre\": \"EnProcesoFaltaAlgo\",\n                \"abreviacion\": \"!\",\n                \"descripcion\": \"En Proceso O Falta Algo\",\n            })\n        }, 1000);\n        setTimeout(() => {\n            setSelectedPrioridad({\n                \"id\": 4,\n                \"nombre\": \"Baja\",\n                \"descripcion\": \"Puede atenderse después de las prioridades más altas\",\n            })    \n        }, 1100);\n        setTimeout(() => {\n            setSelectedMoneda({\n                \"id\": 3,\n                \"nombre\": \"Peso Mexicano\",\n                \"abreviacion\": \"MXN\"\n            })    \n        }, 1200);\n        \n        \n    },[])\n\n\n    return (\n        <>\n        <ConfirmDialog />\n        <Dialog\n            header={isEdit ? \"Detalle Cotización\" : \"Nueva Cotización\"}\n            visible={visible}\n            maximizable\n            style={{ width: \"80vw\" }}\n            onHide={() => {\n                setVisible(false);\n                onClose();\n            }}\n        >\n            <Toast ref={toast} />\n            <div className=\"grid my-5\">\n               \n                <div className=\"col-6 md:col-12 mb-3\">\n                    <label htmlFor=\"titulo\">Título</label>\n                    <FloatLabel>\n                        <InputText\n                            id=\"titulo\"\n                            value={titulo}\n                            onChange={(e) => setTitulo(e.target.value)}\n                            className=\"w-full\"\n                        />\n                    </FloatLabel>\n                </div>\n                <div className=\"col-6 md:col-12 mb-3\">\n                    <label htmlFor=\"Cliente\">Cliente</label>\n                    <DropdownFilter\n                        className=\"mb-3 col-12\"\n                        value={selectedCliente}\n                        onChange={(e) => setSelectedCliente(e.value)}\n                        options={cliente}\n                        optionLabel=\"nombre\" // Cambia a la propiedad adecuada de tu modelo de Status\n                        placeholder=\"Seleccione un Cliente\"\n                        filter\n                        filterBy=\"nombre\"\n                        showClear\n                    />\n                </div>\n                <div className=\"grid grid-cols-2 gap-4 items-start\">\n                    <div className=\"col-span-1 m-4\">\n                        <FloatLabel>\n                            <Calendar\n                                id=\"fecha\"\n                                value={date}\n                                onChange={(e) => setDate(e.value)}\n                                className=\"w-full\"\n                                showIcon\n                                dateFormat=\"dd/mm/yy\"\n                            />\n                            <label htmlFor=\"fecha\">Fecha</label>\n                        </FloatLabel>\n                    </div>\n                    <div className=\"col-span-1\">\n                        <label htmlFor=\"selectPlantilla\" className=\"m-3\">Selecciona la plantilla</label>\n                        \n                        <SelectButton value={value} onChange={(e) => setValue(e.value)} options={options} />\n                    </div>\n                </div>\n\n             \n                <Divider />\n\n                <Fieldset legend=\"Periodo de Validez\" className=\"col-12\">\n                    <div className=\"flex flex-wrap gap-3\">\n                        <div className=\"col-4 md:col-4\">\n                            <FloatLabel>\n                                <Calendar\n                                    id=\"fecha_inicio_cotizacion\"\n                                    value={fecha_inicio_cotizacion}\n                                    onChange={(e) => setFecha_inicio_cotizacion(e.value)}\n                                    className=\"w-full\"\n                                    showIcon\n                                    dateFormat=\"dd/mm/yy\"\n                                />\n                                <label htmlFor=\"fecha_inicio_cotizacion\">\n                                    Fecha inicio Cotizacion\n                                </label>\n                            </FloatLabel>\n                        </div>\n                        <div className=\"col-4 md:col-4\">\n                            <FloatLabel>\n                                <Calendar\n                                    id=\"fecha_fin_cotizacion\"\n                                    value={fecha_final_cotizacion}\n                                    onChange={(e) => setFecha_final_cotizacion(e.value)}\n                                    className=\"w-full\"\n                                    showIcon\n                                    dateFormat=\"dd/mm/yy\"\n                                />\n                                <label htmlFor=\"fecha_fin_cotizacion\">\n                                    Fecha fin Cotizacion\n                                </label>\n                            </FloatLabel>\n                        </div>\n                    </div>\n                </Fieldset>\n\n                \n\n                <div className=\"col-4\">\n                    <label htmlFor=\"proveedor\">Status</label>\n                    <DropdownFilter\n                        className=\"mb-3 col-12\"\n                        value={selectedStatus}\n                        onChange={(e) =>setSelectedStatus(e.value)}\n                        options={statuses}\n                        optionLabel=\"descripcion\" // Cambia a la propiedad adecuada de tu modelo de Status\n                        placeholder=\"Seleccione un status\"\n                        filter\n                        filterBy=\"nombre\"\n                        showClear\n                    />\n                </div>\n\n                <div className=\"col-4\">\n                    <label htmlFor=\"prioridad\">Prioridad</label>\n                    <DropdownFilter\n                        className=\"mb-3 col-12\"\n                        value={selectedPrioridad}\n                        onChange={(e) =>setSelectedPrioridad(e.value)}\n                        options={prioridad}\n                        optionLabel=\"nombre\" // Cambia a la propiedad adecuada de tu modelo de Status\n                        placeholder=\"Seleccione un Prioridad\"\n                        filter\n                        filterBy=\"nombre\"\n                        showClear\n                    />\n                </div>\n\n                <div className=\"col-4\">\n                    <label htmlFor=\"Moneda\">Moneda</label>\n                    <DropdownFilter\n                        className=\"mb-3 col-12\"\n                        value={selectedMoneda}\n                        onChange={(e) =>setSelectedMoneda(e.value)}\n                        options={moneda}\n                        optionLabel=\"nombre\" // Cambia a la propiedad adecuada de tu modelo de Status\n                        placeholder=\"Seleccione una Moneda\"\n                        filter\n                        filterBy=\"nombre\"\n                        showClear\n                    />\n                </div>\n                <div className=\"col-12\">\n                    <Button\n                        label={isEdit ? \"Actualizar\" : \"Guardar\"}\n                        onClick={handleGuardar}\n                        className=\"p-button-success\"\n                    />\n                </div>\n            </div>\n        </Dialog>\n        </>\n    );\n};\n\nexport default Dialogo;\n"],"names":["Dialogo","isEdit","dataToEdit","onSave","onUpdate","onClose","visible","setVisible","useState","selectedProveedor","setSelectedProveedor","titulo","setTitulo","proveedores","setProveedores","date","setDate","fecha_inicio_cotizacion","setFecha_inicio_cotizacion","fecha_final_cotizacion","setFecha_final_cotizacion","toast","useRef","tipo","setTipo","options","value","setValue","useEffect","selectedCliente","setSelectedCliente","cliente","setCliente","ingredient","setIngredient","response","axios","selectedMoneda","setSelectedMoneda","moneda","setMoneda","selectedPrioridad","setSelectedPrioridad","prioridad","setPrioridad","selectedStatus","setSelectedStatus","statuses","setStatuses","es_mano_obra","proveedorEncontrado","p","statusEncontrado","s","monedaEncontrada","m","clienteEncontrado","prioridadEncontrada","handleGuardar","datos","confirmDialog","folio","jsxs","Fragment","jsx","ConfirmDialog","Dialog","Toast","FloatLabel","InputText","e","DropdownFilter","Calendar","SelectButton","Divider","Fieldset","Button"],"mappings":"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"}