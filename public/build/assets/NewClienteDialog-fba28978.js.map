{"version":3,"file":"NewClienteDialog-fba28978.js","sources":["../../../resources/js/Pages/Catalogos/Partials/NewClienteDialog.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect} from 'react';\nimport { Button } from 'primereact/button';\nimport { Dialog } from 'primereact/dialog';\nimport { InputText } from 'primereact/inputtext';\nimport { Fieldset } from 'primereact/fieldset';\nimport { Editor } from \"primereact/editor\";\nimport { Toast } from 'primereact/toast';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport axios from 'axios';\n\nconst NewClienteDialog = ({reloadRegistros, mostrarModal, setMostrarModal, registro}) => {\n    const toast = useRef(null);\n    const [visible, setVisible] = useState(false);\n    const [habilitaBtn, setHabilitaBtn] = useState(false)\n    const [cargando, setCargando] = useState(false)\n\n    const [identyRegistro, setIdentyRegistro] = useState(null); // Usado para actuaizar Registro\n    const [razonSocial, setRazonSocial] = useState('');\n    const [nombreComercial, setNombreComercial] = useState('');\n    const [direccion, setDireccion] = useState('');\n    const [telefono, setTelefono] = useState('');\n    const [email,setEmail] = useState('');\n    const [mensajeAfectivo, setMensajeAfectivo] = useState('');\n    const [numeroProvedor, setNumeroProvedor] = useState('');\n    const [destinatario, setDestinatario] = useState('');\n    const [mensajeVigencia,setMensajeVigencia] = useState('');\n    const [comentarioObservacion,setComentarioObservacion] = useState('');\n    \n\n\n    const registrarCliente = async () =>{\n        setHabilitaBtn(true)\n        const datos = {\n            nombre: razonSocial,\n            abreviacion: nombreComercial,\n            direccion: direccion,\n            telefono: telefono,\n            email: email,\n            numeroProvedor: numeroProvedor,\n            destinatario: destinatario,\n            mensajeAfectivo: mensajeAfectivo,\n            mensajeVigencia: mensajeVigencia,\n            comentarioObservacion: comentarioObservacion,\n        }\n        try {\n            const response = await axios.post(route(\"catalogo.registrar.cliente.nuevo\"), datos);\n            console.log(\"Esto devuelve\", response);\n            const { data, status} = response\n            if (status === 200) {\n                toast.current.show({\n                    severity: \"success\",\n                    summary: \"Success\",\n                    detail: `${data.success}`,\n                    life: 3000,\n                });\n                limpiarFormulario()\n                setVisible(false)\n                reloadRegistros()\n                setTimeout(() => {\n                    setHabilitaBtn(false)\n                }, 1000);\n            }\n        } catch (error) {\n            console.error(error);\n            setHabilitaBtn(false)\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"No se puede almacenar el cliente.. Intenta de nuevo\",\n                life: 3000,\n            });\n        }\n    }\n\n    const acutalizarCliente = async() =>{\n        \n        const datos = {\n            identy: identyRegistro,\n            nombre: razonSocial,\n            abreviacion: nombreComercial,\n            direccion: direccion,\n            telefono: telefono,\n            email: email,\n            numeroProvedor: numeroProvedor,\n            destinatario: destinatario,\n            mensajeAfectivo: mensajeAfectivo,\n            mensajeVigencia: mensajeVigencia,\n            comentarioObservacion: comentarioObservacion,\n        }\n        try {\n            const response = await axios.post(route(\"catalogo.actualizar.cliente.nuevo\"), datos);\n            \n            const { data, status} = response\n            if (status === 200) {\n                toast.current.show({\n                    severity: \"success\",\n                    summary: \"Success\",\n                    detail: `${data.success}`,\n                    life: 3000,\n                });\n                limpiarFormulario()\n                setVisible(false)\n                reloadRegistros()\n                setTimeout(() => {\n                    setHabilitaBtn(false)\n                }, 1000);\n            }\n        } catch (error) {\n            console.error(error);\n            setHabilitaBtn(false)\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"No se puede almacenar el cliente.. Intenta de nuevo\",\n                life: 3000,\n            });\n        }\n    }\n    \n    const limpiarFormulario = () =>{\n        setIdentyRegistro(null)\n        setRazonSocial('');\n        setNombreComercial('');\n        setDireccion('');\n        setTelefono('');\n        setEmail('');\n        setMensajeAfectivo('');\n        setNumeroProvedor('');\n        setDestinatario('');\n        setMensajeVigencia('');\n        setComentarioObservacion('');\n    }\n\n    useEffect(()=>{\n        if(mostrarModal){\n            setVisible(true)\n            setCargando(true)\n            setTimeout(() => {\n                const {\n                    abreviacion,\n                    comentarioObservacion, \n                    destinatario,\n                    direccion,\n                    email,\n                    id,\n                    mensajeAfectivo,\n                    mensajeVigencia,\n                    nombre,\n                    numeroProvedor,\n                    telefono,\n                } = registro\n                setIdentyRegistro(id)\n                setRazonSocial(nombre)\n                setNombreComercial(abreviacion)\n                setDireccion(direccion)\n                setTelefono(telefono)\n                setEmail(email)\n                setMensajeAfectivo(mensajeAfectivo)\n                setNumeroProvedor(numeroProvedor)\n                setDestinatario(destinatario)\n                setMensajeVigencia(mensajeVigencia)\n                setComentarioObservacion(comentarioObservacion)\n                setCargando(false)\n            }, 1000);\n        }else{\n            setVisible(false)\n            setCargando(false)\n        }\n\n    },[mostrarModal]);\n\n    useEffect(()=>{\n        if(visible){\n            limpiarFormulario()\n        }else{\n            setMostrarModal(false)\n        }\n    },[visible])\n    \n\n    return (\n        <>\n            <div className=\"text-right gap-2\">\n                <Button className='m-1' icon=\"pi pi-plus\" rounded severity=\"info\" aria-label=\"Favorite\" tooltip=\"Nuevo Registro\" tooltipOptions={{ position: 'left' }} onClick={() => setVisible(true)}/>\n            </div>\n            <div className=\"flex justify-content-center\">\n            \n                <Dialog header=\"Cliente\" visible={visible} maximizable style={{ width: '80vw' }} onHide={() => {if (!visible) return; setVisible(false); }}>\n                    {cargando &&(\n                        <div className=\" flex justify-content-center\">\n                            <ProgressSpinner />\n                        </div>\n                    )}\n                    <Fieldset legend=\"Datos Generales\">\n                        <div className=\"flex flex-wrap gap-3 p-fluid\">\n                            <div className=\"flex-auto\">\n                                <label htmlFor=\"razonSocial\" className=\"font-bold block mb-2\">RazonSocial (Nombre)</label>\n                                <InputText inputId=\"razonSocial\" value={razonSocial} onChange={(e) => setRazonSocial(e.target.value)} />\n                            </div>\n                            <div className=\"flex-auto\">\n                                <label htmlFor=\"nombreComercial\" className=\"font-bold block mb-2\">Nombre Comercial</label>\n                                <InputText inputId=\"nombreComercial\" value={nombreComercial} onChange={(e) => setNombreComercial(e.target.value)} />\n                            </div>\n                          \n                           \n                        </div>\n                        <div className=\"flex flex-wrap gap-3 p-fluid mt-2\">\n                            <div className=\"flex-auto\">\n                                <label htmlFor=\"direccion\" className=\"font-bold block mb-2\">Dirección</label>\n                                <InputText inputId=\"direccion\" value={direccion} onChange={(e) => setDireccion(e.target.value)} />\n                            </div>\n                            <div className=\"flex-auto\">\n                                <label htmlFor=\"telefono\" className=\"font-bold block mb-2\">Teléfono</label>\n                                <InputText inputId=\"telefono\" value={telefono} onChange={(e) => setTelefono(e.target.value)} />\n                            </div>\n                            <div className=\"flex-auto\">\n                                <label htmlFor=\"email\" className=\"font-bold block mb-2\">Correo Electronico</label>\n                                <InputText inputId=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n                            </div>\n                        </div>\n                    </Fieldset>\n                    <Fieldset legend=\"Cabecera PDF, Excel\" className='mt-3'>\n                        <div className=\"flex flex-wrap gap-3 p-fluid\">\n                            <div className=\"flex-auto\">\n                                <label htmlFor=\"numeroProvedor\" className=\"font-bold block mb-2\">Numero de Provedor</label>\n                                <InputText inputId=\"numeroProvedor\" value={numeroProvedor} onChange={(e) => setNumeroProvedor(e.target.value)} />\n                            </div>\n                            <div className=\"flex-auto\">\n                                <label htmlFor=\"destinatario\" className=\"font-bold block mb-2\">Destinatario(Nombre)</label>\n                                <InputText inputId=\"destinatario\" value={destinatario} onChange={(e) => setDestinatario(e.target.value)} />\n                            </div>\n                        </div>\n                        <div className=\"flex flex-wrap gap-3 p-fluid mt-5\">\n                            <div className=\"flex-auto \">\n                                <label htmlFor=\"msnAfectivo\" className=\"font-bold block mb-2\">Mensaje Afectivo</label>\n                                <Editor value={mensajeAfectivo} onTextChange={(e) => setMensajeAfectivo(e.htmlValue)} style={{ height: '80px' }} />\n                            </div>\n                        </div>\n                    </Fieldset>\n                    <Fieldset legend=\"Pie Pagina PDF, Excel\" className='mt-3'>\n                        <div className=\"flex flex-wrap gap-3 p-fluid\">\n                            <div className=\"flex-auto\">\n                                <label htmlFor=\"vigenciaMsj\" className=\"font-bold block mb-2\">Mnesaje Vigencia</label>\n                                <InputText inputId=\"vigenciaMsj\" value={mensajeVigencia} onChange={(e) => setMensajeVigencia(e.target.value)} />\n                            </div>\n                        </div>\n                        <div className=\"flex flex-wrap gap-3 p-fluid mt-5\">\n                            <div className=\"flex-auto \">\n                                <label htmlFor=\"observacionComentario\" className=\"font-bold block mb-2\">Comentarios Observación</label>\n                                <Editor value={comentarioObservacion} onTextChange={(e) => setComentarioObservacion(e.htmlValue)} style={{ height: '80px' }} />\n                            </div>\n                        </div>\n                    </Fieldset>\n\n                  \n\n                    <div className=\"card flex justify-content-center gap-2\">\n\n                        <Button label={identyRegistro===null ? 'Registrar':'Actualizar'} icon=\"pi pi-check\" disabled={habilitaBtn} onClick={()=>{\n                            if(identyRegistro === null){\n                                registrarCliente()\n                            }else{\n                                acutalizarCliente()\n                            }\n                            \n                            }}/>\n                        <Button label=\"Limpiar Formulario\" icon=\"pi pi-refresh\" disabled={habilitaBtn} onClick={()=>limpiarFormulario()} />\n                        \n                    </div>\n                </Dialog>\n            </div>\n            <Toast ref={toast} />\n        </>\n    );\n    \n}\n\nexport default NewClienteDialog;"],"names":["NewClienteDialog","reloadRegistros","mostrarModal","setMostrarModal","registro","toast","useRef","visible","setVisible","useState","habilitaBtn","setHabilitaBtn","cargando","setCargando","identyRegistro","setIdentyRegistro","razonSocial","setRazonSocial","nombreComercial","setNombreComercial","direccion","setDireccion","telefono","setTelefono","email","setEmail","mensajeAfectivo","setMensajeAfectivo","numeroProvedor","setNumeroProvedor","destinatario","setDestinatario","mensajeVigencia","setMensajeVigencia","comentarioObservacion","setComentarioObservacion","registrarCliente","datos","response","axios","data","status","limpiarFormulario","error","acutalizarCliente","useEffect","abreviacion","id","nombre","jsxs","Fragment","jsx","Button","Dialog","ProgressSpinner","Fieldset","InputText","e","Editor","Toast"],"mappings":"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"}