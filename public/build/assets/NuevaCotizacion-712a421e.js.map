{"version":3,"file":"NuevaCotizacion-712a421e.js","sources":["../../../resources/js/Pages/Actividades/Partials/NuevaCotizacion.jsx"],"sourcesContent":["import React, { Component, useState, useEffect, useRef } from \"react\";\nimport { Fieldset } from 'primereact/fieldset';\nimport { InputText } from 'primereact/inputtext';\nimport { Editor } from 'primereact/editor';\nimport { Calendar } from 'primereact/calendar';\nimport { InputNumber } from 'primereact/inputnumber';\nimport { Dialog } from 'primereact/dialog';\nimport { Button } from 'primereact/button';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Toast } from \"primereact/toast\";\nimport { Divider } from 'primereact/divider';\n        \n        \n        \n\nconst NuevaCotizacion = ({preguntaNuevaCotizacion, setPreguntaNuevaCotizacion, identyNewCotizacion, recargar}) => {\n    const toast = useRef(null);\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const [identyActividad,setIdentyActividad] = useState(null);\n    const [titulo, setTitulo] = useState('');\n    const [clienteSeleccionado, setClienteSeleccionado] = useState(null);\n    const [fecha, setFecha] = useState(null);\n    const [plantillaSeleccionada, setPlantillaSeleccionada] = useState(null);\n\n    const [fechaInicio, setFechaInicio] = useState(null);\n    const [fechaFin, setFechaFin] = useState(null);\n\n    const [estatusSeleccionado, setEstatusSeleccionado] = useState(null);\n    const [prioridadSeleccionada, setPrioridadSeleccionada] = useState(null);\n    const [monedaSeleccionada, setMonedaSeleccionada] = useState(null);\n    // Catalogos\n    const [clientes, setClientes ] = useState([])\n    const [plantillas, setPlantillas] = useState([\n        { name: 'Material', code: 'material' },\n        { name: 'Material y Mano de Obra', code: 'mano_obra' }\n    ]);\n    const [estatusOpciones, setEstatusOpciones] = useState([])\n    const [prioridades, setPrioridades] = useState([])\n    const [monedas, setMonedas]= useState([])\n\n    useEffect(()=>{\n        if(preguntaNuevaCotizacion === true){\n            setVisible(preguntaNuevaCotizacion)\n        }        \n    },[preguntaNuevaCotizacion])\n\n    useEffect(()=>{\n        if(visible === false){\n            setPreguntaNuevaCotizacion(visible)\n        }\n    },[visible])\n\n    useEffect(()=>{\n        setIdentyActividad(identyNewCotizacion)\n    },[identyNewCotizacion])\n\n    function validarDatos(datos) {\n        if (!datos.titulo || datos.titulo.trim() === \"\") return \"El tÃ­tulo es obligatorio.\";\n        if (!datos.cliente_id) return \"Debes seleccionar un cliente.\";\n        if (!datos.fecha) return \"Debes seleccionar una fecha.\";\n        if (!datos.es_material) return \"Selecciona la plantilla.\";\n        if (!datos.status_id) return \"Debes seleccionar un estatus.\";\n        if (!datos.prioridad_id) return \"Debes seleccionar una prioridad.\";\n        if (!datos.moneda_id) return \"Selecciona una moneda.\";\n        if (!datos.fecha_inicio_cotizacion) return \"Debes seleccionar una Inicio Vigencia\";\n        if (!datos.fecha_final_cotizacion) return \"Debes seleccionar una Fin Vigencia.\";\n        return null;\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setLoading(true)\n\n        const datos = {\n            \"status_id\": estatusSeleccionado?.id ?? null,\n            \"moneda_id\": monedaSeleccionada?.id ?? null ,\n            \"cliente_id\": clienteSeleccionado?.id ?? null,\n            \"prioridad_id\": prioridadSeleccionada?.id ?? null,\n            \"titulo\": titulo ?? null,\n            \"fecha\": fecha ?? null,\n            \"fecha_inicio_cotizacion\": fechaInicio ?? null,\n            \"fecha_final_cotizacion\": fechaFin ?? null,\n            \"es_material\": plantillaSeleccionada?.code ?? null\n        }\n\n        const error = validarDatos(datos);\n\n        if (error) {\n            setLoading(false)\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: error,\n                life: 3000,\n            });\n            return;\n        }\n\n        generarNuevaCotizacion(datos)\n        \n    }\n\n\n    const generarNuevaCotizacion = async (datos) =>{\n        try {\n            const response = await axios.post(route(\"cotizacion.registrar.cotizacion\"), datos);            \n            const { data, status} = response\n            const {folio} = data.data;\n\n            if (status === 201) {\n\n                \n                \n                toast.current.show({\n                    severity: \"success\",\n                    summary: \"Success\",\n                    detail: `${data.success}`,\n                    life: 3000,\n                });\n                toast.current.show({\n                    severity:'info', \n                    summary: 'Info', \n                    detail:`Folio Generado : ${folio}`, \n                    life: 5000\n                });                \n                asociarActvidadCotizacion(data.data)                    \n                \n            }\n        } catch (error) {\n            console.error(error);\n            setLoading(false)\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"Error al registrar la cotizacion\",\n                life: 3000,\n            });\n            setLoading(false)\n        }\n    }\n\n    const asociarActvidadCotizacion = async(data) =>{\n        const {id} = data // Identifica la cotizacion\n        try {\n            const datos = {\n                \"cotizacion_id\": id,\n                \"actividad_id\": identyActividad,\n            }\n            const response = await axios.post(route(\"asociar.activid.cotizacion\"), datos);            \n            const { data, status} = response\n\n            if (status === 201) {\n                toast.current.show({\n                    severity: \"success\",\n                    summary: \"Success\",\n                    detail: `${data.success}`,\n                    life: 3000,\n                });\n                \n                setLoading(false)\n                limpiarFormulario()\n                setVisible(false)\n                setIdentyActividad(null)\n                recargar(1)\n              \n            }\n        } \n        catch (error) {\n            console.error(error);\n            setLoading(false)\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"Error al asociar Actividad con la cotizacion\",\n                life: 3000,\n            });\n        }\n    }\n\n    const limpiarFormulario = () =>{\n        setEstatusSeleccionado(null)\n        setMonedaSeleccionada(null)\n        setClienteSeleccionado(null)\n        setPrioridadSeleccionada(null)\n        setTitulo('')\n        setFecha(null)\n        setFechaInicio(null)\n        setFechaFin(null)\n        setPlantillaSeleccionada(null)\n    }\n    \n\n    const obtenerStatuses = async () => {\n        try {\n            const response = await axios.get(route(\"catalogo.list.status\"));          \n            const estatus = response.data.map(item => ({\n                id: item.id,\n                name: `(${item.abreviacion}) - ${item.descripcion}`,\n                code: item.id\n            }));\n            setEstatusOpciones(estatus);\n        } catch (error) {\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"No se pudo obtener la lista de prioridades.\",\n                life: 3000,\n            });\n        }\n    };\n\n    const obtenerPrioridad = async () => {\n        try {\n            const response = await axios.get(route(\"catalogo.list.prioridades\"));\n            const prioridad = response.data.map(item => ({\n                id: item.id,\n                name: `${item.nombre}`,\n                code: item.id\n            }));\n            setPrioridades(prioridad);\n\n        } catch (error) {\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"No se pudo obtener la lista de statuses.\",\n                life: 3000,\n            });\n        }\n    };\n\n    const obtenerMonedas = async () => {\n        try {\n            const response = await axios.get(\n                route(\"catalogo.list.tiposmonedas\")\n            );\n            const monedas = response.data.map(item => ({\n                id: item.id,\n                name: `${item.abreviacion} - ${item.nombre}`,\n                code: item.abreviacion\n            }));\n            setMonedas(monedas);\n        } catch (error) {\n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"No se pudo obtener la lista de monedas.\",\n                life: 3000,\n            });\n        }\n    };\n\n    const obtenerClientes = async () => {\n        try {\n            const response = await axios.get(route(\"catalogo.list.clientes\"));\n            const clienteAsc = response.data.map(item => ({\n                id: item.id,\n                name: `${item.abreviacion} - ${item.nombre}`,\n                code: item.nombre\n            }));\n            setClientes(clienteAsc);\n        } catch (error) {\n            \n            \n            toast.current.show({\n                severity: \"error\",\n                summary: \"Error\",\n                detail: \"No se pudo obtener la lista de clientes.\",\n                life: 3000,\n            });\n        }\n    };\n\n    useEffect(() => {        \n        obtenerStatuses()\n        obtenerPrioridad()\n        obtenerMonedas()\n        obtenerClientes()\n    },[visible])\n   \n  \n   \n  \n    \n  \n    \n    return(\n        <div className=\"flex justify-content-center\">\n\n            <Toast ref={toast} />\n            \n            <Dialog header=\"CotizaciÃ³n Generada a Partir de una Actividad\" visible={visible} maximizable style={{ width: '50vw' }} onHide={() => {if (!visible) return; setVisible(false); }}>\n                \n                <p className=\"m-0 mb-4 font-bold text-center\">\n                  Nota: Esta cotizaciÃ³n quedarÃ¡ relacionada con la actividad en curso.\n                </p>\n                <form action=\"\" onSubmit={handleSubmit}>\n                    <Fieldset legend=\"Datos Generales de CotizaciÃ³n\">\n                        <div className=\"formgrid grid p-fluid\">\n                            <div className=\"field col-12\">\n                                <label htmlFor=\"titulo\" className=\"font-bold block mb-2\">TÃ­tulo</label>\n                                <InputText id=\"titulo\" value={titulo} onChange={(e) => setTitulo(e.target.value)} />\n                            </div>\n\n                            <div className=\"field col-12\">\n                                <label htmlFor=\"cliente\" className=\"font-bold block mb-2\">Cliente</label>\n                                <Dropdown \n                                    id=\"cliente\"\n                                    value={clienteSeleccionado}\n                                    onChange={(e) => setClienteSeleccionado(e.value)}\n                                    options={clientes}\n                                    optionLabel=\"name\"\n                                    placeholder=\"Selecciona un cliente\"\n                                    className=\"w-full\"\n                                />\n                            </div>\n\n                            <div className=\"field col-6\">\n                                <label htmlFor=\"fecha\" className=\"font-bold block mb-2\">Fecha</label>\n                                <Calendar\n                                    id=\"fecha\"\n                                    value={fecha}\n                                    onChange={(e) => setFecha(e.value)}\n                                    dateFormat=\"dd/mm/yy\"\n                                    showIcon\n                                    className=\"w-full\"\n                                />\n                            </div>\n\n                            <div className=\"field col-6\">\n                                <label htmlFor=\"plantilla\" className=\"font-bold block mb-2\">Plantilla</label>\n                                <Dropdown \n                                    id=\"plantilla\"\n                                    value={plantillaSeleccionada}\n                                    onChange={(e) => setPlantillaSeleccionada(e.value)}\n                                    options={plantillas}\n                                    optionLabel=\"name\"\n                                    placeholder=\"Selecciona una plantilla\"\n                                    className=\"w-full\"\n                                />\n                            </div>\n                        </div>\n                        <div className=\"formgrid grid p-fluid\">\n                            <div className=\"field col-4\">\n                                <label htmlFor=\"estatus\" className=\"font-bold block mb-2\">Estatus</label>\n                                <Dropdown \n                                    id=\"estatus\"\n                                    value={estatusSeleccionado}\n                                    onChange={(e) => setEstatusSeleccionado(e.value)}\n                                    options={estatusOpciones}\n                                    optionLabel=\"name\"\n                                    placeholder=\"Selecciona un estatus\"\n                                    className=\"w-full\"\n                                />\n                            </div>\n\n                            <div className=\"field col-4\">\n                                <label htmlFor=\"prioridad\" className=\"font-bold block mb-2\">Prioridad</label>\n                                <Dropdown \n                                    id=\"prioridad\"\n                                    value={prioridadSeleccionada}\n                                    onChange={(e) => setPrioridadSeleccionada(e.value)}\n                                    options={prioridades}\n                                    optionLabel=\"name\"\n                                    placeholder=\"Selecciona una prioridad\"\n                                    className=\"w-full\"\n                                />\n                            </div>\n\n                            <div className=\"field col-4\">\n                                <label htmlFor=\"moneda\" className=\"font-bold block mb-2\">Moneda</label>\n                                <Dropdown \n                                    id=\"moneda\"\n                                    value={monedaSeleccionada}\n                                    onChange={(e) => setMonedaSeleccionada(e.value)}\n                                    options={monedas}\n                                    optionLabel=\"name\"\n                                    placeholder=\"Selecciona una moneda\"\n                                    className=\"w-full\"\n                                />\n                            </div>\n                        </div>\n                        <Divider />\n\n                        <h5 className=\"mt-3\">Periodo de Validez</h5>\n                        <div className=\"formgrid grid p-fluid\">\n                            <div className=\"field col-4\">\n                                <label htmlFor=\"fechaInicio\" className=\"font-bold block mb-2\">Inicio Vigencia</label>\n                                <Calendar\n                                    id=\"fechaInicio\"\n                                    value={fechaInicio}\n                                    onChange={(e) => setFechaInicio(e.value)}\n                                    dateFormat=\"dd/mm/yy\"\n                                    showIcon\n                                    className=\"w-full\"\n                                />\n                            </div>\n\n                            <div className=\"field col-4\">\n                                <label htmlFor=\"fechaFin\" className=\"font-bold block mb-2\">Fin Vigencia</label>\n                                <Calendar\n                                    id=\"fechaFin\"\n                                    value={fechaFin}\n                                    onChange={(e) => setFechaFin(e.value)}\n                                    dateFormat=\"dd/mm/yy\"\n                                    showIcon\n                                    className=\"w-full\"\n                                />\n                            </div>\n                        </div>\n                    </Fieldset>\n                    <div className=\"flex justify-content-center\">\n                        <Button label=\"Generar\" type=\"submit\" size=\"small\" loading={loading}/>\n                    </div>\n                </form>\n            </Dialog>\n        </div>\n        \n    )\n\n}\nexport default NuevaCotizacion;"],"names":["NuevaCotizacion","preguntaNuevaCotizacion","setPreguntaNuevaCotizacion","identyNewCotizacion","recargar","toast","useRef","visible","setVisible","useState","loading","setLoading","identyActividad","setIdentyActividad","titulo","setTitulo","clienteSeleccionado","setClienteSeleccionado","fecha","setFecha","plantillaSeleccionada","setPlantillaSeleccionada","fechaInicio","setFechaInicio","fechaFin","setFechaFin","estatusSeleccionado","setEstatusSeleccionado","prioridadSeleccionada","setPrioridadSeleccionada","monedaSeleccionada","setMonedaSeleccionada","clientes","setClientes","plantillas","setPlantillas","estatusOpciones","setEstatusOpciones","prioridades","setPrioridades","monedas","setMonedas","useEffect","validarDatos","datos","handleSubmit","error","generarNuevaCotizacion","response","data","status","folio","asociarActvidadCotizacion","id","limpiarFormulario","obtenerStatuses","estatus","item","obtenerPrioridad","prioridad","obtenerMonedas","obtenerClientes","clienteAsc","jsxs","jsx","Toast","Dialog","Fieldset","InputText","Dropdown","Calendar","Divider","Button"],"mappings":"q0BAeA,MAAMA,GAAkB,CAAC,CAAC,wBAAAC,EAAyB,2BAAAC,EAA4B,oBAAAC,EAAqB,SAAAC,KAAc,CACxG,MAAAC,EAAQC,SAAO,IAAI,EACnB,CAACC,EAASC,CAAU,EAAIC,WAAS,EAAK,EACtC,CAACC,EAASC,CAAU,EAAIF,WAAS,EAAK,EAEtC,CAACG,EAAgBC,CAAkB,EAAIJ,WAAS,IAAI,EACpD,CAACK,EAAQC,CAAS,EAAIN,WAAS,EAAE,EACjC,CAACO,EAAqBC,CAAsB,EAAIR,WAAS,IAAI,EAC7D,CAACS,EAAOC,CAAQ,EAAIV,WAAS,IAAI,EACjC,CAACW,EAAuBC,CAAwB,EAAIZ,WAAS,IAAI,EAEjE,CAACa,EAAaC,CAAc,EAAId,WAAS,IAAI,EAC7C,CAACe,EAAUC,CAAW,EAAIhB,WAAS,IAAI,EAEvC,CAACiB,EAAqBC,CAAsB,EAAIlB,WAAS,IAAI,EAC7D,CAACmB,EAAuBC,CAAwB,EAAIpB,WAAS,IAAI,EACjE,CAACqB,EAAoBC,CAAqB,EAAItB,WAAS,IAAI,EAE3D,CAACuB,EAAUC,CAAY,EAAIxB,EAAA,SAAS,CAAE,CAAA,EACtC,CAACyB,EAAYC,EAAa,EAAI1B,WAAS,CACzC,CAAE,KAAM,WAAY,KAAM,UAAW,EACrC,CAAE,KAAM,0BAA2B,KAAM,WAAY,CAAA,CACxD,EACK,CAAC2B,EAAiBC,CAAkB,EAAI5B,EAAA,SAAS,CAAE,CAAA,EACnD,CAAC6B,EAAaC,CAAc,EAAI9B,EAAA,SAAS,CAAE,CAAA,EAC3C,CAAC+B,EAASC,CAAU,EAAGhC,EAAA,SAAS,CAAE,CAAA,EAExCiC,EAAAA,UAAU,IAAI,CACPzC,IAA4B,IAC3BO,EAAWP,CAAuB,CACtC,EACF,CAACA,CAAuB,CAAC,EAE3ByC,EAAAA,UAAU,IAAI,CACPnC,IAAY,IACXL,EAA2BK,CAAO,CACtC,EACF,CAACA,CAAO,CAAC,EAEXmC,EAAAA,UAAU,IAAI,CACV7B,EAAmBV,CAAmB,CAAA,EACxC,CAACA,CAAmB,CAAC,EAEvB,SAASwC,EAAaC,EAAO,CACzB,MAAI,CAACA,EAAM,QAAUA,EAAM,OAAO,SAAW,GAAW,4BACnDA,EAAM,WACNA,EAAM,MACNA,EAAM,YACNA,EAAM,UACNA,EAAM,aACNA,EAAM,UACNA,EAAM,wBACNA,EAAM,uBACJ,KADmC,sCADC,wCADd,yBADG,mCADH,gCADE,2BADN,+BADK,+BASlC,CAEM,MAAAC,EAAe,MAAO,GAAM,CAC9B,EAAE,eAAe,EACjBlC,EAAW,EAAI,EAEf,MAAMiC,EAAQ,CACV,WAAalB,GAAA,YAAAA,EAAqB,KAAM,KACxC,WAAaI,GAAA,YAAAA,EAAoB,KAAM,KACvC,YAAcd,GAAA,YAAAA,EAAqB,KAAM,KACzC,cAAgBY,GAAA,YAAAA,EAAuB,KAAM,KAC7C,OAAUd,GAAU,KACpB,MAASI,GAAS,KAClB,wBAA2BI,GAAe,KAC1C,uBAA0BE,GAAY,KACtC,aAAeJ,GAAA,YAAAA,EAAuB,OAAQ,IAAA,EAG5C0B,EAAQH,EAAaC,CAAK,EAEhC,GAAIE,EAAO,CACPnC,EAAW,EAAK,EAChBN,EAAM,QAAQ,KAAK,CACf,SAAU,QACV,QAAS,QACT,OAAQyC,EACR,KAAM,GAAA,CACT,EACD,MACJ,CAEAC,EAAuBH,CAAK,CAAA,EAK1BG,EAAyB,MAAOH,GAAS,CACvC,GAAA,CACA,MAAMI,EAAW,MAAM,MAAM,KAAK,MAAM,iCAAiC,EAAGJ,CAAK,EAC3E,CAAE,KAAAK,EAAM,OAAAC,CAAU,EAAAF,EAClB,CAAC,MAAAG,CAAK,EAAIF,EAAK,KAEjBC,IAAW,MAIX7C,EAAM,QAAQ,KAAK,CACf,SAAU,UACV,QAAS,UACT,OAAQ,GAAG4C,EAAK,OAAO,GACvB,KAAM,GAAA,CACT,EACD5C,EAAM,QAAQ,KAAK,CACf,SAAS,OACT,QAAS,OACT,OAAO,oBAAoB8C,CAAK,GAChC,KAAM,GAAA,CACT,EACDC,EAA0BH,EAAK,IAAI,SAGlCH,EAAO,CACZ,QAAQ,MAAMA,CAAK,EACnBnC,EAAW,EAAK,EAChBN,EAAM,QAAQ,KAAK,CACf,SAAU,QACV,QAAS,QACT,OAAQ,mCACR,KAAM,GAAA,CACT,EACDM,EAAW,EAAK,CACpB,CAAA,EAGEyC,EAA4B,MAAMH,GAAQ,CACtC,KAAA,CAAC,GAAAI,CAAM,EAAAJ,EACT,GAAA,CACA,MAAML,EAAQ,CACV,cAAiBS,EACjB,aAAgBzC,CAAA,EAEdoC,EAAW,MAAM,MAAM,KAAK,MAAM,4BAA4B,EAAGJ,CAAK,EACtE,CAAE,KAAAK,EAAM,OAAAC,EAAA,EAAUF,EAEpBE,KAAW,MACX7C,EAAM,QAAQ,KAAK,CACf,SAAU,UACV,QAAS,UACT,OAAQ,GAAG4C,EAAK,OAAO,GACvB,KAAM,GAAA,CACT,EAEDtC,EAAW,EAAK,EACE2C,IAClB9C,EAAW,EAAK,EAChBK,EAAmB,IAAI,EACvBT,EAAS,CAAC,SAIX0C,EAAO,CACV,QAAQ,MAAMA,CAAK,EACnBnC,EAAW,EAAK,EAChBN,EAAM,QAAQ,KAAK,CACf,SAAU,QACV,QAAS,QACT,OAAQ,+CACR,KAAM,GAAA,CACT,CACL,CAAA,EAGEiD,EAAoB,IAAK,CAC3B3B,EAAuB,IAAI,EAC3BI,EAAsB,IAAI,EAC1Bd,EAAuB,IAAI,EAC3BY,EAAyB,IAAI,EAC7Bd,EAAU,EAAE,EACZI,EAAS,IAAI,EACbI,EAAe,IAAI,EACnBE,EAAY,IAAI,EAChBJ,EAAyB,IAAI,CAAA,EAI3BkC,EAAkB,SAAY,CAC5B,GAAA,CAEA,MAAMC,GADW,MAAM,MAAM,IAAI,MAAM,sBAAsB,CAAC,GACrC,KAAK,IAAaC,IAAA,CACvC,GAAIA,EAAK,GACT,KAAM,IAAIA,EAAK,WAAW,OAAOA,EAAK,WAAW,GACjD,KAAMA,EAAK,EACb,EAAA,EACFpB,EAAmBmB,CAAO,OACd,CACZnD,EAAM,QAAQ,KAAK,CACf,SAAU,QACV,QAAS,QACT,OAAQ,8CACR,KAAM,GAAA,CACT,CACL,CAAA,EAGEqD,EAAmB,SAAY,CAC7B,GAAA,CAEA,MAAMC,GADW,MAAM,MAAM,IAAI,MAAM,2BAA2B,CAAC,GACxC,KAAK,IAAaF,IAAA,CACzC,GAAIA,EAAK,GACT,KAAM,GAAGA,EAAK,MAAM,GACpB,KAAMA,EAAK,EACb,EAAA,EACFlB,EAAeoB,CAAS,OAEZ,CACZtD,EAAM,QAAQ,KAAK,CACf,SAAU,QACV,QAAS,QACT,OAAQ,2CACR,KAAM,GAAA,CACT,CACL,CAAA,EAGEuD,GAAiB,SAAY,CAC3B,GAAA,CAIA,MAAMpB,GAHW,MAAM,MAAM,IACzB,MAAM,4BAA4B,CAAA,GAEb,KAAK,IAAaiB,IAAA,CACvC,GAAIA,EAAK,GACT,KAAM,GAAGA,EAAK,WAAW,MAAMA,EAAK,MAAM,GAC1C,KAAMA,EAAK,WACb,EAAA,EACFhB,EAAWD,CAAO,OACN,CACZnC,EAAM,QAAQ,KAAK,CACf,SAAU,QACV,QAAS,QACT,OAAQ,0CACR,KAAM,GAAA,CACT,CACL,CAAA,EAGEwD,GAAkB,SAAY,CAC5B,GAAA,CAEA,MAAMC,GADW,MAAM,MAAM,IAAI,MAAM,wBAAwB,CAAC,GACpC,KAAK,IAAaL,IAAA,CAC1C,GAAIA,EAAK,GACT,KAAM,GAAGA,EAAK,WAAW,MAAMA,EAAK,MAAM,GAC1C,KAAMA,EAAK,MACb,EAAA,EACFxB,EAAY6B,CAAU,OACV,CAGZzD,EAAM,QAAQ,KAAK,CACf,SAAU,QACV,QAAS,QACT,OAAQ,2CACR,KAAM,GAAA,CACT,CACL,CAAA,EAGJqC,OAAAA,EAAAA,UAAU,IAAM,CACIa,IACCG,IACFE,KACCC,IAAA,EAClB,CAACtD,CAAO,CAAC,EASPwD,EAAA,KAAC,MAAI,CAAA,UAAU,8BAEX,SAAA,CAACC,EAAAA,IAAAC,GAAA,CAAM,IAAK5D,CAAO,CAAA,EAElB0D,EAAAA,KAAAG,GAAA,CAAO,OAAO,gDAAgD,QAAA3D,EAAkB,YAAW,GAAC,MAAO,CAAE,MAAO,MAAO,EAAG,OAAQ,IAAM,CAAMA,GAAiBC,EAAW,EAAK,CAExK,EAAA,SAAA,CAACwD,EAAA,IAAA,IAAA,CAAE,UAAU,iCAAiC,SAE9C,uEAAA,EACCD,EAAA,KAAA,OAAA,CAAK,OAAO,GAAG,SAAUlB,EACtB,SAAA,CAACkB,EAAAA,KAAAI,GAAA,CAAS,OAAO,gCACb,SAAA,CAACJ,EAAAA,KAAA,MAAA,CAAI,UAAU,wBACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,eACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,SAAS,UAAU,uBAAuB,SAAM,SAAA,EAC9DA,EAAAA,IAAAI,GAAA,CAAU,GAAG,SAAS,MAAOtD,EAAQ,SAAW,GAAMC,EAAU,EAAE,OAAO,KAAK,CAAG,CAAA,CAAA,EACtF,EAEAgD,EAAAA,KAAC,MAAI,CAAA,UAAU,eACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,UAAU,UAAU,uBAAuB,SAAO,UAAA,EACjEA,EAAA,IAACK,EAAA,CACG,GAAG,UACH,MAAOrD,EACP,SAAW,GAAMC,EAAuB,EAAE,KAAK,EAC/C,QAASe,EACT,YAAY,OACZ,YAAY,wBACZ,UAAU,QAAA,CACd,CAAA,EACJ,EAEA+B,EAAAA,KAAC,MAAI,CAAA,UAAU,cACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,QAAQ,UAAU,uBAAuB,SAAK,QAAA,EAC7DA,EAAA,IAACM,EAAA,CACG,GAAG,QACH,MAAOpD,EACP,SAAW,GAAMC,EAAS,EAAE,KAAK,EACjC,WAAW,WACX,SAAQ,GACR,UAAU,QAAA,CACd,CAAA,EACJ,EAEA4C,EAAAA,KAAC,MAAI,CAAA,UAAU,cACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,YAAY,UAAU,uBAAuB,SAAS,YAAA,EACrEA,EAAA,IAACK,EAAA,CACG,GAAG,YACH,MAAOjD,EACP,SAAW,GAAMC,EAAyB,EAAE,KAAK,EACjD,QAASa,EACT,YAAY,OACZ,YAAY,2BACZ,UAAU,QAAA,CACd,CAAA,EACJ,CAAA,EACJ,EACA6B,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,UAAU,UAAU,uBAAuB,SAAO,UAAA,EACjEA,EAAA,IAACK,EAAA,CACG,GAAG,UACH,MAAO3C,EACP,SAAW,GAAMC,EAAuB,EAAE,KAAK,EAC/C,QAASS,EACT,YAAY,OACZ,YAAY,wBACZ,UAAU,QAAA,CACd,CAAA,EACJ,EAEA2B,EAAAA,KAAC,MAAI,CAAA,UAAU,cACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,YAAY,UAAU,uBAAuB,SAAS,YAAA,EACrEA,EAAA,IAACK,EAAA,CACG,GAAG,YACH,MAAOzC,EACP,SAAW,GAAMC,EAAyB,EAAE,KAAK,EACjD,QAASS,EACT,YAAY,OACZ,YAAY,2BACZ,UAAU,QAAA,CACd,CAAA,EACJ,EAEAyB,EAAAA,KAAC,MAAI,CAAA,UAAU,cACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,SAAS,UAAU,uBAAuB,SAAM,SAAA,EAC/DA,EAAA,IAACK,EAAA,CACG,GAAG,SACH,MAAOvC,EACP,SAAW,GAAMC,EAAsB,EAAE,KAAK,EAC9C,QAASS,EACT,YAAY,OACZ,YAAY,wBACZ,UAAU,QAAA,CACd,CAAA,EACJ,CAAA,EACJ,QACC+B,GAAQ,EAAA,EAERP,EAAA,IAAA,KAAA,CAAG,UAAU,OAAO,SAAkB,qBAAA,EACvCD,EAAAA,KAAC,MAAI,CAAA,UAAU,wBACX,SAAA,CAACA,EAAAA,KAAA,MAAA,CAAI,UAAU,cACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,cAAc,UAAU,uBAAuB,SAAe,kBAAA,EAC7EA,EAAA,IAACM,EAAA,CACG,GAAG,cACH,MAAOhD,EACP,SAAW,GAAMC,EAAe,EAAE,KAAK,EACvC,WAAW,WACX,SAAQ,GACR,UAAU,QAAA,CACd,CAAA,EACJ,EAEAwC,EAAAA,KAAC,MAAI,CAAA,UAAU,cACX,SAAA,CAAAC,MAAC,QAAM,CAAA,QAAQ,WAAW,UAAU,uBAAuB,SAAY,eAAA,EACvEA,EAAA,IAACM,EAAA,CACG,GAAG,WACH,MAAO9C,EACP,SAAW,GAAMC,EAAY,EAAE,KAAK,EACpC,WAAW,WACX,SAAQ,GACR,UAAU,QAAA,CACd,CAAA,EACJ,CAAA,EACJ,CAAA,EACJ,EACCuC,EAAA,IAAA,MAAA,CAAI,UAAU,8BACX,SAACA,EAAA,IAAAQ,GAAA,CAAO,MAAM,UAAU,KAAK,SAAS,KAAK,QAAQ,QAAA9D,CAAiB,CAAA,EACxE,CAAA,EACJ,CAAA,EACJ,CACJ,CAAA,CAAA,CAIR"}