{"version":3,"file":"FormItemDetalle-86488764.js","sources":["../../../resources/js/Pages/LogsActividades/partials/FormItemDetalle.jsx"],"sourcesContent":["import React, { Component, useEffect, useState, useRef } from 'react';\n\nimport { InputNumber } from 'primereact/inputnumber';\nimport { InputTextarea } from \"primereact/inputtextarea\";\nimport { Divider } from 'primereact/divider';\nimport { InputText } from 'primereact/inputtext';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Button } from 'primereact/button';\nimport axios from \"axios\";\nimport { Toast } from 'primereact/toast';\nimport { ProgressSpinner } from 'primereact/progressspinner';\nimport { Editor } from 'primereact/editor';\n\nimport { Menubar } from 'primereact/menubar';\nimport { Slider } from \"primereact/slider\";\nimport { Badge } from 'primereact/badge';\n\n\n\nconst FormItemDetalle = ({cotizacion, detalle=null, modalVisible, recargarListado, detalleItem}) => {\n    \n    const [porcentaje, setPorcentaje] = useState(0);\n    \n    const toast = useRef(null);\n    const [progress, setProgress] = useState(false)\n    const [disabledDefinici贸nTomo, setDisabledDefinici贸nTomo]=useState(false)\n    const [accionBtn, setAccionBtn] = useState('Registrar')\n    const [identyDetallle, setIdentyDetallle] = useState(null);  \n    const [identyCotizacion, setIdentyCotizacion] = useState(null);    \n    \n    const [segmento, setSegmento] = useState('todo');\n    const show = () => {\n        toast.current.show({ severity: 'info', summary: 'Info', detail: 'Message Content' });\n    };\n\n    useEffect(()=>{\n        if(cotizacion){\n            setIdentyCotizacion(cotizacion)\n        } \n    },[cotizacion])\n\n    \n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                if (detalle == null) {                    \n                    setSegmento('todo');\n                    await getUnidadesMedida();\n                } else if (detalle.es_tomo === 1) {\n                    setSegmento('tomo');\n                    await getDetalleItem(detalle.id);\n                    setIdentyDetallle(detalle.id);\n                    setAccionBtn('Actualizar');\n                } else if (detalle.es_tomo === 0) {\n                    setSegmento('detalle');\n                    await getUnidadesMedida();\n                    await getDetalleItem(detalle.id);\n                    setIdentyDetallle(detalle.id);\n                    setAccionBtn('Actualizar');\n                }else{\n                    \n                }\n            } catch (error) {\n                console.error(\"Error en fetchData:\", error);\n            }\n        };\n    \n        fetchData();\n    }, [detalle]);\n\n    \n    \n    const [unidadesDeMedida, setUnidadesDeMedida] = useState([]);\n    // Todo lo relacionado con el tomo\n    const [perteneceTomo, setPerteneceTomo] = useState(0);\n    useEffect(()=>{\n        if(perteneceTomo==2){\n            getListadoTomoAsc()\n        }        \n    },[perteneceTomo])\n    const [tpAsoTomo, setTpAsoTomo] = useState([\n        { name: 'Ninguno', value:0 },\n        { name: 'Captura Tomo', value:1 },\n        { name: 'Listar Tomos', value:2}\n    ]);\n    const [capturaTomo, setCapturaTomo] = useState('');\n    const [seleccionTomo, setSeleccionTomo] = useState(null);\n    const [listaTomos, setListaTomo] = useState([]);    \n    // Todo lo relacionado con el costo de materiales\n    const [descripcionMaterial, setDescripcionMaterial]= useState('');\n    const [seleccionUnidadMedida, setSeleccionUnidadMedida] = useState(null);\n    const [cantidadMaterial, setCantidadMaterial] = useState(1);\n    const [costoMaterialSugerido, setCostoMaterialSugerido] = useState(0);\n    const [costoMaterialFinal,setCostoMaterialFinal] = useState(0);  \n    const [subTotalMaterial, setSubTotalMaterial] = useState(0);\n    // Efecto Espejo Costo Sugerido\n    useEffect(()=>{        \n        setCostoMaterialFinal(costoMaterialSugerido)\n    },[costoMaterialSugerido])\n    useEffect(()=>{\n        const total = cantidadMaterial * costoMaterialFinal;\n        setSubTotalMaterial(total)\n    },[cantidadMaterial, costoMaterialFinal])\n\n\n    // -------------------\n    // Todo lo relacionado al aumento de porcentaje\n\n    const [costoMaterialSugeridoPorcentual, setCostoMaterialSugeridoPorcentual] = useState(null);\n    const [costoManoObraFinalPorcentual, setCostoManoObraFinalPorcentual] = useState(null);\n    useEffect(()=>{\n        // const newCostoMaterialSugerido = costoMaterialFinal * (1 + porcentaje / 100);\n        const newCostoMaterialSugerido = Math.round(costoMaterialFinal * (1 + porcentaje / 100));\n        setCostoMaterialSugeridoPorcentual(parseFloat(newCostoMaterialSugerido))\n\n        const newCostoManoObraFinalSugerido = Math.round(costoManoObraFinal * (1 + porcentaje / 100));\n        setCostoManoObraFinalPorcentual(parseFloat(newCostoManoObraFinalSugerido))        \n    },[porcentaje])\n\n    useEffect(()=>{\n        setCostoMaterialSugeridoPorcentual(null)\n        setCostoManoObraFinalPorcentual(null)\n    },[])\n\n    // ---------------------------------------------\n\n    // Todo lo relacionado con el costo de mano de obra\n    const [costoManoObraSugerido, setCostoManoObraSugerido] = useState(null);\n    const [costoManoObraFinal, setCostoManoObraFinal] = useState(null);\n    const [subTotalManoObra, setSubTotalManoObra] = useState(0);\n    useEffect(()=>{\n        setCostoManoObraFinal(costoManoObraSugerido)\n    },[costoManoObraSugerido])\n    useEffect(()=>{\n        const totalObra = cantidadMaterial * costoManoObraFinal;\n        setSubTotalManoObra(totalObra)\n    },[cantidadMaterial,costoManoObraFinal]);\n\n    // ---------------------------------------------\n\n    // --- final M.O./MATER.\n    const [subTotalMateObraTotal, setSubTotalMateObraTotal] = useState(0);\n    useEffect(()=>{\n        const totalTodo = subTotalMaterial+subTotalManoObra;\n        setSubTotalMateObraTotal(totalTodo)\n    },[subTotalMaterial,subTotalManoObra])\n    \n    const [citaComentario, setCitaComentario] = useState(null);\n\n    const getListadoTomoAsc = async() =>{\n        await axios\n        .get(`${route(\"cotizacion.list.tomos\", { identy: identyCotizacion })}`)\n        .then((response) => {\n            const {data, status } = response       \n            if(status == 200){\n                const dataMapeada = data.map(item => ({\n                    id: item.id,\n                    name: item.PDA + ' - ' + item.descripcion\n                }));\n                setListaTomo(dataMapeada)\n            }\n        });\n    }\n\n    const getUnidadesMedida = async() =>{\n        await axios\n        .get(`${route(\"catalogo.list.unidadesmedidas\")}`)\n        .then((response) => {\n            const {data, status } = response\n            if(status == 200){\n                const dataMapeada = data.map(item => ({\n                    value: item.id,\n                    name: item.nombre + ' - ' + item.abreviatura\n                }));\n                setUnidadesDeMedida(dataMapeada);\n            }\n        });\n    }\n\n    const getDetalleItem = async (identy) =>{\n        const id = identy\n        await axios\n        .get(`${route(\"cotizacion.captura.item.detalle\", { id: id })}`)\n        .then((response) => {\n            const {data, status } = response            \n            \n            if(status == 200){\n                if(data.es_tomo==1){\n                    setPerteneceTomo(1)\n                    setCapturaTomo(data.descripcion);\n                    setTimeout(() => {\n                        setDisabledDefinici贸nTomo(true)\n                    }, 600);\n                    \n                }else{\n                    setDisabledDefinici贸nTomo(false)\n                    setDescripcionMaterial(data.descripcion);                \n                    setCantidadMaterial(data.costo_material_cantidad);\n                    setCostoMaterialSugerido(data.costo_material_unitario_sugerido);\n                    setCostoManoObraSugerido(data.costo_mano_obra_unitario_sugerido);\n                    setCitaComentario(data.comentarios_extras);\n                    setTimeout(() => {\n                        setSeleccionUnidadMedida(data.cat_unidad_medida_id);\n                        setCostoMaterialFinal(data.costo_material_unitario);     \n                        setCostoManoObraFinal(data.costo_mano_obra_unitario);              \n                    }, 600);\n                    setTimeout(() => {\n                        setSubTotalMaterial(data.costo_material_subtotal);    \n                        setSubTotalManoObra(data.costo_mano_obra_subtotal);\n                        setSubTotalMateObraTotal(data.obra_material_subtotal);\n                    }, 1000);\n                }\n                \n\n\n            }\n        });\n    }\n\n    const almacenarRegistro = async () => {\n        setProgress(true)\n        const datos = {\n            identyCotizacion: identyCotizacion,\n            perteneceTomo: perteneceTomo,\n            capturaTomo: capturaTomo,\n            seleccionTomo: seleccionTomo,\n            // -------------Material------------------------\n            descripcionMaterial: descripcionMaterial,\n            seleccionUnidadMedida: seleccionUnidadMedida,\n            cantidadMaterial: cantidadMaterial,\n            costoMaterialSugerido: costoMaterialSugerido,\n            costoMaterialFinal: costoMaterialFinal,\n            subTotalMaterial: subTotalMaterial,\n            // ----------------Mano Obra---------------------\n            costoManoObraSugerido: costoManoObraSugerido,\n            costoManoObraFinal: costoManoObraFinal,\n            subTotalManoObra: subTotalManoObra,\n            // ----------------M.O./MATER---------------------\n            subTotalMateObraTotal: subTotalMateObraTotal,\n            citaComentario: citaComentario,\n        }\n       \n        await axios\n        .post(`${route(\"cotizacion.guardad.captura\")}`, datos)\n        .then((response) => {\n            const { status, data } = response;\n            if (status == 201) {\n                toast.current.show({ severity: 'info', summary: 'Info', detail: `${data.success}`});\n            }\n        })\n        .catch((error) => {            \n            const {response, status} = error\n            if(status == 500){\n                const mensaje = response?.data?.error || ''\n                toast.current.show({\n                  severity: \"error\",\n                  summary: \"Error\",\n                  detail:`No se pudo guardar la cotizaci贸n.${mensaje}`,\n                  life: 9000,\n                });\n            }\n          })\n          .finally(() => {\n              setTimeout(() => {\n                modalVisible()    \n                setTimeout(() => {\n                    toast.current.show({ severity: 'info', summary: 'Info', detail: `Datos guardados correctamente`});\n                    setProgress(false)   \n                }, 1000);         \n            }, 2000);\n        });\n    }\n\n    const actualizarRegistro = async () =>{\n        setProgress(true)\n        const datos = {\n            \n            identyDetallle: identyDetallle,\n            identyCotizacion: identyCotizacion,\n            perteneceTomo: perteneceTomo,\n            capturaTomo: capturaTomo,\n            seleccionTomo: seleccionTomo,\n            // -------------Material------------------------\n            descripcionMaterial: descripcionMaterial,\n            seleccionUnidadMedida: seleccionUnidadMedida,\n            cantidadMaterial: cantidadMaterial,\n            costoMaterialSugerido: costoMaterialSugerido,\n            costoMaterialFinal: costoMaterialFinal,\n            subTotalMaterial: subTotalMaterial,\n            // ----------------Mano Obra---------------------\n            costoManoObraSugerido: costoManoObraSugerido,\n            costoManoObraFinal: costoManoObraFinal,\n            subTotalManoObra: subTotalManoObra,\n            // ----------------M.O./MATER---------------------\n            subTotalMateObraTotal: subTotalMateObraTotal,\n            citaComentario: citaComentario,\n        }\n        \n        try {\n            \n            await axios\n            .post(`${route(\"cotizacion.captura.item.actualiza\")}`, datos)\n            .then((response) => {\n                const { status, data } = response;                \n                if (status == 201) {\n                    toast.current.show({ severity: 'info', summary: 'Info', detail: 'Datos actualizados correctamente' });\n                }\n                // setLoader(false); \n            })\n            .finally(() => {\n                setTimeout(() => {\n                    modalVisible()    \n                    setTimeout(() => {\n                        toast.current.show({ severity: 'info', summary: 'Info', detail: `Datos guardados correctamente`});\n                        setProgress(false)\n                    }, 1000);\n                }, 600);\n            });            \n        } catch (error) {\n            setLoader(false); \n            toast.current.show\n        }\n       \n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault(); // Evita que la p谩gina se recargue   \n        if(segmento == 'todo'){\n            almacenarRegistro();\n        }\n        if(segmento == 'tomo' || segmento == 'detalle'){\n            actualizarRegistro()\n        }\n    };\n\n    const end = (\n        <div className=\"flex justify-content-end\">\n            <div className=\"max-w-full\">\n                <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Aumento Costos %</label>\n                <InputText value={porcentaje} onChange={(e) => setPorcentaje(e.target.value)} className=\"w-full p-inputtext-sm\" readOnly/>\n                <Slider value={porcentaje} onChange={(e) => setPorcentaje(e.value)} className=\"w-full\" />\n            </div>\n        </div>\n    );\n\n    const aplicarIvaConcepto = () =>{\n        setCostoMaterialFinal(costoMaterialSugeridoPorcentual)\n        setCostoManoObraFinal(costoManoObraFinalPorcentual)\n        setPorcentaje(0)\n        setTimeout(() => {\n            toast.current.show({ severity: 'info', summary: 'Info', detail: `Se implemento el porentaje ${porcentaje}. Actualiza para guardar los cambios necesarios`});\n            setCostoMaterialSugeridoPorcentual(null)\n            setCostoManoObraFinalPorcentual(null)            \n        }, 1000);\n    }\n\n    return (\n          <div className=\"card\">\n            <form action=\"\" method=\"post\" onSubmit={handleSubmit}>\n                        \n                        {(segmento === 'todo' || segmento === 'tomo') && (\n                            <>\n                                <div class=\"formgrid grid\">\n                                    <div class=\"field col-4\">\n                                        <label htmlFor=\"defineTomo\" className=\"font-bold block mb-2\">Definici贸n de Tomo</label>\n                                        <Dropdown \n                                            value={perteneceTomo} \n                                            onChange={(e) => {\n                                                setPerteneceTomo(e.value)\n                                            }} \n                                            disabled={disabledDefinici贸nTomo}\n                                            options={tpAsoTomo} \n                                            optionLabel=\"name\" \n                                            placeholder=\"Seleccione\" \n                                            className=\"w-full\" />\n                                    </div>\n                                    <div class=\"field col-8\">\n                                        {(perteneceTomo == 1) && (\n                                            <>\n                                                <label htmlFor=\"mile\" className=\"font-bold block mb-2\">Captura un Tomo</label>\n                                                <InputText value={capturaTomo} onChange={(e) => setCapturaTomo(e.target.value)} className=\"w-full\"/>\n                                            </>                 \n                                        )}\n                                        {(perteneceTomo==2) &&(\n                                            <>\n                                                <label htmlFor=\"selectTomo\" className=\"font-bold block mb-2\">Selecciona un Tomo</label>\n                                                <Dropdown \n                                                        value={seleccionTomo} \n                                                        onChange={(e) => setSeleccionTomo(e.value)} \n                                                        options={listaTomos} \n                                                        optionLabel=\"name\" \n                                                        placeholder=\"Seleccione\" \n                                                        className=\"w-full\" />\n                                            </>  \n                                        )}\n                                    </div>\n                                </div>\n                                <Divider />\n                            </>\n                        )}\n                        {(segmento === 'todo' || segmento === 'detalle') && (\n                            <>\n                                <h5>Costo de Materiales</h5>\n                                {identyDetallle !== null && (\n                                    <div class=\"col-12\">\n                                        {end}\n                                    </div>\n                                )}\n                                <div class=\"formgrid grid\">\n                                    <div class=\"field col-12\">\n                                        <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Descripci贸n</label>\n                                        <Editor value={descripcionMaterial} onTextChange={(e) => setDescripcionMaterial(e.htmlValue)} style={{ height: '160px' }} />\n                                    </div>               \n                                </div>\n                                <div class=\"formgrid grid\">\n                                    <div class=\"field col-4\">\n                                        <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Unidad</label>\n                                        <Dropdown \n                                            value={seleccionUnidadMedida} \n                                            onChange={(e) => setSeleccionUnidadMedida(e.value)} \n                                            options={unidadesDeMedida} \n                                            optionLabel=\"name\" \n                                            placeholder=\"Selecciona\" \n                                            className=\"w-full\"/>\n                                    </div>  \n                                    <div class=\"field col-4\">\n                                        <label htmlFor=\"cantidad\" className=\"font-bold block mb-2\">Catidad</label>\n                                        \n                                        <InputNumber \n                                            inputId=\"cantidad\" \n                                            value={cantidadMaterial} \n                                            min={0}  \n                                            maxFractionDigits={0}\n                                            onValueChange={(e) => setCantidadMaterial(e.value)} \n                                            placeholder=\"Cantidad\"/>\n                                        \n                                    </div>  \n                                    <div class=\"field col-4\">\n                                        <label htmlFor=\"CostoSugerido\" className=\"font-bold block mb-2\">Costo Unitario Sugerido</label>\n                                      \n                                        <div className=\"p-inputgroup flex-1\">\n                                            <span className=\"p-inputgroup-addon\">$</span>\n                                            <InputNumber \n                                                inputId=\"cantidad\" \n                                                value={costoMaterialSugerido} \n                                                min={0}  \n                                                maxFractionDigits={0}\n                                                onValueChange={(e) => setCostoMaterialSugerido(e.value)} \n                                                placeholder=\"Consto Unitario Sugerido\"/>\n                                        </div>\n                                        \n                                    </div>  \n                                    <div class=\"field col-4\">\n                                        \n                                        <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Costo Unitario</label>\n                                        {costoMaterialSugeridoPorcentual && (\n                                            <div className='flex justify-content-end'>\n                                                <Badge value={`$ ${costoMaterialSugeridoPorcentual}`}></Badge>\n                                            </div>\n                                        )}\n                                        <div className=\"p-inputgroup flex-1\">\n                                            <span className=\"p-inputgroup-addon\">$</span>\n                                            <InputNumber \n                                                inputId=\"cantidad\" \n                                                value={costoMaterialFinal} \n                                                min={0}  \n                                                maxFractionDigits={0}\n                                                onValueChange={(e) => setCostoMaterialFinal(e.value)} \n                                                placeholder=\"Consto Unitario\"/>\n                                        </div>\n                                    </div>  \n                                    <div class=\"field col-4\">\n                                        <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Subtotal</label>\n                                        <div className=\"p-inputgroup flex-1\">\n                                            <span className=\"p-inputgroup-addon\">$</span>\n                                            <InputNumber \n                                                inputId=\"cantidad\" \n                                                disabled\n                                                value={subTotalMaterial} \n                                                onValueChange={(e) => setSubTotalMaterial(e.value)} \n                                                placeholder=\"Consto Unitario\"/>\n                                        </div>\n                                    </div>  \n                                </div>\n                                {detalleItem.es_mano_obra ==1 && (\n                                    <>\n                                        <Divider />\n                                        <h5>Costo de Mano de Obra</h5>\n                                        \n                                        <div class=\"formgrid grid\">\n                                            \n                                            <div class=\"field col-4\">\n                                                <label htmlFor=\"costUnitSugeridoManoObra\" className=\"font-bold block mb-2\">Costo Unitario Sugerido</label>\n                                                <div className=\"p-inputgroup flex-1\">\n                                                    <span className=\"p-inputgroup-addon\">$</span>\n                                                    <InputNumber \n                                                        inputId=\"cantidad\" \n                                                        value={costoManoObraSugerido} \n                                                        min={0}  \n                                                        maxFractionDigits={0}\n                                                        onValueChange={(e) => setCostoManoObraSugerido(e.value)} \n                                                        placeholder=\"Consto Unitario\"/>\n                                                </div>\n                                                \n                                            </div>  \n                                            <div class=\"field col-4\">\n                                                \n                                                <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Costo Unitario</label>\n                                                {costoManoObraFinalPorcentual &&(\n                                                    <div className=\"flex justify-content-center\">                                                        \n                                                        <Badge value={`$ ${costoManoObraFinalPorcentual}`}></Badge>\n                                                    </div>\n                                                )}\n                                                <div className=\"p-inputgroup flex-1\">\n                                                    <span className=\"p-inputgroup-addon\">$</span>\n                                                    <InputNumber \n                                                        inputId=\"cantidad\" \n                                                        value={costoManoObraFinal} \n                                                        min={0}  \n                                                        maxFractionDigits={0}\n                                                        onValueChange={(e) => setCostoManoObraFinal(e.value)} \n                                                        placeholder=\"Consto Unitario\"/>\n                                                </div>\n                                            </div>  \n                                            <div class=\"field col-4\">\n                                                <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Subtotal</label>\n                                                <div className=\"p-inputgroup flex-1\">\n                                                    <span className=\"p-inputgroup-addon\">$</span>\n                                                    <InputNumber \n                                                        disabled\n                                                        inputId=\"cantidad\" \n                                                        value={subTotalManoObra} \n                                                        onValueChange={(e) => setSubTotalManoObra(e.value)} \n                                                        placeholder=\"Consto Unitario\"/>\n                                                </div>\n                                            </div>  \n                                        </div>\n                                        <Divider />\n                                        <h5>M.O./MATER.</h5>\n                                        <div class=\"formgrid grid\">\n                                            <div class=\"field col-4\">\n                                                <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Subtotal</label>\n                                                <div className=\"p-inputgroup flex-1\">\n                                                    <span className=\"p-inputgroup-addon\">$</span>\n                                                    <InputNumber \n                                                        disabled\n                                                        inputId=\"cantidad\" \n                                                        value={subTotalMateObraTotal} \n                                                        onValueChange={(e) => setSubTotalMateObraTotal(e.value)} \n                                                        placeholder=\"Subtotal\"/>\n                                                </div>\n                                                \n                                            </div>  \n                                        </div>\n                                    </>\n                                )}\n                                <Divider />\n                                <h5>Agregar algun comentario</h5>\n                                <div class=\"formgrid grid\">\n                                    <div class=\"field col-12\">\n                                        <label htmlFor=\"percent\" className=\"font-bold block mb-2\">Descripcion</label>\n                                        <InputTextarea className=\"w-full\" value={citaComentario} onChange={(e) => setCitaComentario(e.target.value)} rows={2} cols={30} />\n                                    </div>               \n                                </div>\n                            </>\n                        )}\n                    \n                \n                \n                <div className=\"card flex justify-content-center\">\n                    {progress && (\n                        <ProgressSpinner style={{width: '50px', height: '50px'}} strokeWidth=\"8\" fill=\"var(--surface-ground)\" animationDuration=\".5s\" />\n                    )}\n                    {!progress && porcentaje===0 && (\n                        <Button type=\"submit\" label={accionBtn}/>\n                    )}\n                    {!progress && porcentaje > 0 && (\n                        <Button label=\"Aplicar % Calculo\" severity=\"info\" onClick={(e)=>{e.preventDefault(); aplicarIvaConcepto()}}/>\n                    )}\n                </div>\n            </form>\n            <Toast ref={toast} />\n            \n            \n        </div>\n    );\n    \n}\n\nexport default FormItemDetalle;"],"names":["FormItemDetalle","cotizacion","detalle","modalVisible","recargarListado","detalleItem","porcentaje","setPorcentaje","useState","toast","useRef","progress","setProgress","disabledDefinici贸nTomo","setDisabledDefinici贸nTomo","accionBtn","setAccionBtn","identyDetallle","setIdentyDetallle","identyCotizacion","setIdentyCotizacion","segmento","setSegmento","useEffect","getUnidadesMedida","getDetalleItem","error","unidadesDeMedida","setUnidadesDeMedida","perteneceTomo","setPerteneceTomo","getListadoTomoAsc","tpAsoTomo","setTpAsoTomo","capturaTomo","setCapturaTomo","seleccionTomo","setSeleccionTomo","listaTomos","setListaTomo","descripcionMaterial","setDescripcionMaterial","seleccionUnidadMedida","setSeleccionUnidadMedida","cantidadMaterial","setCantidadMaterial","costoMaterialSugerido","setCostoMaterialSugerido","costoMaterialFinal","setCostoMaterialFinal","subTotalMaterial","setSubTotalMaterial","total","costoMaterialSugeridoPorcentual","setCostoMaterialSugeridoPorcentual","costoManoObraFinalPorcentual","setCostoManoObraFinalPorcentual","newCostoMaterialSugerido","newCostoManoObraFinalSugerido","costoManoObraFinal","costoManoObraSugerido","setCostoManoObraSugerido","setCostoManoObraFinal","subTotalManoObra","setSubTotalManoObra","totalObra","subTotalMateObraTotal","setSubTotalMateObraTotal","totalTodo","citaComentario","setCitaComentario","axios","response","data","status","dataMapeada","item","identy","id","almacenarRegistro","datos","mensaje","_a","actualizarRegistro","handleSubmit","e","end","jsxs","jsx","InputText","Slider","aplicarIvaConcepto","Fragment","Dropdown","Divider","Editor","InputNumber","Badge","InputTextarea","ProgressSpinner","Button","Toast"],"mappings":"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"}